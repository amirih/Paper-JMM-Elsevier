	.file	"IMP1.c"
	.text
	.p2align 4,,15
	.globl	assignToThisCore12
	.type	assignToThisCore12, @function
assignToThisCore12:
.LFB5460:
	.cfi_startproc
	movl	%edi, %r8d
	movl	$mask, %edx
	movl	$16, %ecx
	xorl	%eax, %eax
	movq	%rdx, %rdi
	rep stosq
	movslq	%r8d, %rax
	cmpq	$1023, %rax
	ja	.L2
	shrq	$6, %rax
	movl	$1, %edx
	shlx	%r8, %rdx, %r8
	orq	%r8, mask(,%rax,8)
.L2:
	movslq	%esi, %rax
	cmpq	$1023, %rax
	ja	.L3
	shrq	$6, %rax
	movl	$1, %edx
	shlx	%rsi, %rdx, %rsi
	orq	%rsi, mask(,%rax,8)
.L3:
	movl	$mask, %edx
	movl	$128, %esi
	xorl	%edi, %edi
	jmp	sched_setaffinity
	.cfi_endproc
.LFE5460:
	.size	assignToThisCore12, .-assignToThisCore12
	.p2align 4,,15
	.globl	assignImagef32
	.type	assignImagef32, @function
assignImagef32:
.LFB5461:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rdi, %rbx
	xorl	%r9d, %r9d
	vmovsd	.LC0(%rip), %xmm3
	vmovsd	.LC1(%rip), %xmm5
	vmovsd	.LC2(%rip), %xmm4
	movl	$1195121335, %edi
	.p2align 4,,10
	.p2align 3
.L6:
	vcvtsi2sd	%r9d, %xmm2, %xmm2
	vfmadd132sd	%xmm5, %xmm4, %xmm2
	movq	%rbx, %r11
	movl	%r9d, %r10d
	xorl	%esi, %esi
	.p2align 4,,10
	.p2align 3
.L7:
	leal	1(%rsi), %r8d
	movl	%r9d, %eax
	cltd
	idivl	%r8d
	leal	(%rax,%r10), %ecx
	movl	%ecx, %edx
	shrl	%edx
	movl	%edx, %eax
	mull	%edi
	shrl	$5, %edx
	imull	$230, %edx, %edx
	subl	%edx, %ecx
	vcvtsi2sd	%ecx, %xmm0, %xmm0
	vcvtsi2sd	%esi, %xmm1, %xmm1
	vfmadd132sd	%xmm3, %xmm2, %xmm1
	vaddsd	%xmm1, %xmm0, %xmm0
	vcvtsd2ss	%xmm0, %xmm6, %xmm6
	vmovss	%xmm6, (%r11)
	addl	%r9d, %r10d
	addq	$4, %r11
	movl	%r8d, %esi
	cmpl	$64, %r8d
	jne	.L7
	incl	%r9d
	addq	$272, %rbx
	cmpl	$64, %r9d
	jne	.L6
	popq	%rbx
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE5461:
	.size	assignImagef32, .-assignImagef32
	.p2align 4,,15
	.globl	assignMatrixf32
	.type	assignMatrixf32, @function
assignMatrixf32:
.LFB5462:
	.cfi_startproc
	xorl	%r8d, %r8d
	vmovsd	.LC2(%rip), %xmm1
	movl	$274877907, %r10d
	.p2align 4,,10
	.p2align 3
.L13:
	xorl	%r9d, %r9d
	movl	$1, %esi
	.p2align 4,,10
	.p2align 3
.L14:
	movl	%r8d, %eax
	cltd
	idivl	%esi
	leal	(%rax,%r9), %ecx
	movl	%ecx, %eax
	mull	%r10d
	shrl	$6, %edx
	imull	$1000, %edx, %edx
	subl	%edx, %ecx
	vcvtsi2sd	%ecx, %xmm0, %xmm0
	vaddsd	%xmm1, %xmm0, %xmm0
	vcvtsd2ss	%xmm0, %xmm2, %xmm2
	vmovss	%xmm2, -4(%rdi,%rsi,4)
	incq	%rsi
	addl	%r8d, %r9d
	cmpq	$65, %rsi
	jne	.L14
	incl	%r8d
	addq	$256, %rdi
	cmpl	$64, %r8d
	jne	.L13
	ret
	.cfi_endproc
.LFE5462:
	.size	assignMatrixf32, .-assignMatrixf32
	.p2align 4,,15
	.globl	assignImagei32
	.type	assignImagei32, @function
assignImagei32:
.LFB5463:
	.cfi_startproc
	xorl	%r8d, %r8d
	movl	$-2139062143, %r10d
	.p2align 4,,10
	.p2align 3
.L19:
	xorl	%r9d, %r9d
	movl	$1, %esi
	.p2align 4,,10
	.p2align 3
.L20:
	movl	%r8d, %eax
	cltd
	idivl	%esi
	leal	(%rax,%r9), %ecx
	movl	%ecx, %eax
	mull	%r10d
	shrl	$7, %edx
	movl	%edx, %eax
	sall	$8, %eax
	subl	%edx, %eax
	subl	%eax, %ecx
	movl	%ecx, -4(%rdi,%rsi,4)
	incq	%rsi
	addl	%r8d, %r9d
	cmpq	$65, %rsi
	jne	.L20
	incl	%r8d
	addq	$272, %rdi
	cmpl	$64, %r8d
	jne	.L19
	ret
	.cfi_endproc
.LFE5463:
	.size	assignImagei32, .-assignImagei32
	.p2align 4,,15
	.globl	assignMatrixi32
	.type	assignMatrixi32, @function
assignMatrixi32:
.LFB5464:
	.cfi_startproc
	xorl	%eax, %eax
	vmovdqa	.LC3(%rip), %ymm12
	vmovdqa	.LC4(%rip), %ymm0
	vmovdqa	.LC5(%rip), %ymm4
	vmovdqa	.LC6(%rip), %ymm3
	vmovdqa	.LC7(%rip), %ymm11
	vmovdqa	.LC8(%rip), %ymm10
	vmovdqa	.LC9(%rip), %ymm9
	vmovdqa	.LC10(%rip), %ymm8
	vmovdqa	.LC11(%rip), %ymm7
	vmovdqa	.LC12(%rip), %ymm6
	vmovdqa	.LC13(%rip), %ymm5
	.p2align 4,,10
	.p2align 3
.L25:
	vmovd	%eax, %xmm1
	vpbroadcastd	%xmm1, %ymm1
	vpmulld	%ymm12, %ymm1, %ymm13
	vpsrlq	$32, %ymm13, %ymm14
	vpmuldq	%ymm0, %ymm13, %ymm2
	vpmuldq	%ymm0, %ymm14, %ymm14
	vpshufb	%ymm4, %ymm2, %ymm2
	vpshufb	%ymm3, %ymm14, %ymm14
	vpor	%ymm14, %ymm2, %ymm2
	vpsrad	$6, %ymm2, %ymm14
	vpslld	$5, %ymm14, %ymm2
	vpsubd	%ymm14, %ymm2, %ymm2
	vpslld	$2, %ymm2, %ymm2
	vpaddd	%ymm14, %ymm2, %ymm2
	vpslld	$3, %ymm2, %ymm2
	vpsubd	%ymm2, %ymm13, %ymm2
	vmovdqu	%ymm2, (%rdi)
	vpmulld	%ymm11, %ymm1, %ymm13
	vpsrlq	$32, %ymm13, %ymm14
	vpmuldq	%ymm0, %ymm13, %ymm2
	vpmuldq	%ymm0, %ymm14, %ymm14
	vpshufb	%ymm4, %ymm2, %ymm2
	vpshufb	%ymm3, %ymm14, %ymm14
	vpor	%ymm14, %ymm2, %ymm2
	vpsrad	$6, %ymm2, %ymm14
	vpslld	$5, %ymm14, %ymm2
	vpsubd	%ymm14, %ymm2, %ymm2
	vpslld	$2, %ymm2, %ymm2
	vpaddd	%ymm14, %ymm2, %ymm2
	vpslld	$3, %ymm2, %ymm2
	vpsubd	%ymm2, %ymm13, %ymm2
	vmovdqu	%ymm2, 32(%rdi)
	vpmulld	%ymm10, %ymm1, %ymm13
	vpsrlq	$32, %ymm13, %ymm14
	vpmuldq	%ymm0, %ymm13, %ymm2
	vpmuldq	%ymm0, %ymm14, %ymm14
	vpshufb	%ymm4, %ymm2, %ymm2
	vpshufb	%ymm3, %ymm14, %ymm14
	vpor	%ymm14, %ymm2, %ymm2
	vpsrad	$6, %ymm2, %ymm14
	vpslld	$5, %ymm14, %ymm2
	vpsubd	%ymm14, %ymm2, %ymm2
	vpslld	$2, %ymm2, %ymm2
	vpaddd	%ymm14, %ymm2, %ymm2
	vpslld	$3, %ymm2, %ymm2
	vpsubd	%ymm2, %ymm13, %ymm2
	vmovdqu	%ymm2, 64(%rdi)
	vpmulld	%ymm9, %ymm1, %ymm13
	vpsrlq	$32, %ymm13, %ymm14
	vpmuldq	%ymm0, %ymm13, %ymm2
	vpmuldq	%ymm0, %ymm14, %ymm14
	vpshufb	%ymm4, %ymm2, %ymm2
	vpshufb	%ymm3, %ymm14, %ymm14
	vpor	%ymm14, %ymm2, %ymm2
	vpsrad	$6, %ymm2, %ymm14
	vpslld	$5, %ymm14, %ymm2
	vpsubd	%ymm14, %ymm2, %ymm2
	vpslld	$2, %ymm2, %ymm2
	vpaddd	%ymm14, %ymm2, %ymm2
	vpslld	$3, %ymm2, %ymm2
	vpsubd	%ymm2, %ymm13, %ymm2
	vmovdqu	%ymm2, 96(%rdi)
	vpmulld	%ymm8, %ymm1, %ymm13
	vpsrlq	$32, %ymm13, %ymm14
	vpmuldq	%ymm0, %ymm13, %ymm2
	vpmuldq	%ymm0, %ymm14, %ymm14
	vpshufb	%ymm4, %ymm2, %ymm2
	vpshufb	%ymm3, %ymm14, %ymm14
	vpor	%ymm14, %ymm2, %ymm2
	vpsrad	$6, %ymm2, %ymm14
	vpslld	$5, %ymm14, %ymm2
	vpsubd	%ymm14, %ymm2, %ymm2
	vpslld	$2, %ymm2, %ymm2
	vpaddd	%ymm14, %ymm2, %ymm2
	vpslld	$3, %ymm2, %ymm2
	vpsubd	%ymm2, %ymm13, %ymm2
	vmovdqu	%ymm2, 128(%rdi)
	vpmulld	%ymm7, %ymm1, %ymm13
	vpsrlq	$32, %ymm13, %ymm14
	vpmuldq	%ymm0, %ymm13, %ymm2
	vpmuldq	%ymm0, %ymm14, %ymm14
	vpshufb	%ymm4, %ymm2, %ymm2
	vpshufb	%ymm3, %ymm14, %ymm14
	vpor	%ymm14, %ymm2, %ymm2
	vpsrad	$6, %ymm2, %ymm14
	vpslld	$5, %ymm14, %ymm2
	vpsubd	%ymm14, %ymm2, %ymm2
	vpslld	$2, %ymm2, %ymm2
	vpaddd	%ymm14, %ymm2, %ymm2
	vpslld	$3, %ymm2, %ymm2
	vpsubd	%ymm2, %ymm13, %ymm2
	vmovdqu	%ymm2, 160(%rdi)
	vpmulld	%ymm6, %ymm1, %ymm13
	vpsrlq	$32, %ymm13, %ymm14
	vpmuldq	%ymm0, %ymm13, %ymm2
	vpmuldq	%ymm0, %ymm14, %ymm14
	vpshufb	%ymm4, %ymm2, %ymm2
	vpshufb	%ymm3, %ymm14, %ymm14
	vpor	%ymm14, %ymm2, %ymm2
	vpsrad	$6, %ymm2, %ymm14
	vpslld	$5, %ymm14, %ymm2
	vpsubd	%ymm14, %ymm2, %ymm2
	vpslld	$2, %ymm2, %ymm2
	vpaddd	%ymm14, %ymm2, %ymm2
	vpslld	$3, %ymm2, %ymm2
	vpsubd	%ymm2, %ymm13, %ymm2
	vmovdqu	%ymm2, 192(%rdi)
	vpmulld	%ymm5, %ymm1, %ymm1
	vpsrlq	$32, %ymm1, %ymm13
	vpmuldq	%ymm0, %ymm1, %ymm2
	vpmuldq	%ymm0, %ymm13, %ymm13
	vpshufb	%ymm4, %ymm2, %ymm2
	vpshufb	%ymm3, %ymm13, %ymm13
	vpor	%ymm13, %ymm2, %ymm2
	vpsrad	$6, %ymm2, %ymm13
	vpslld	$5, %ymm13, %ymm2
	vpsubd	%ymm13, %ymm2, %ymm2
	vpslld	$2, %ymm2, %ymm2
	vpaddd	%ymm13, %ymm2, %ymm2
	vpslld	$3, %ymm2, %ymm2
	vpsubd	%ymm2, %ymm1, %ymm1
	vmovdqu	%ymm1, 224(%rdi)
	incl	%eax
	addq	$256, %rdi
	cmpl	$64, %eax
	jne	.L25
	vzeroupper
	ret
	.cfi_endproc
.LFE5464:
	.size	assignMatrixi32, .-assignMatrixi32
	.p2align 4,,15
	.globl	assignMatrixi16
	.type	assignMatrixi16, @function
assignMatrixi16:
.LFB5465:
	.cfi_startproc
	pushq	%r14
	.cfi_def_cfa_offset 16
	.cfi_offset 14, -16
	pushq	%r13
	.cfi_def_cfa_offset 24
	.cfi_offset 13, -24
	pushq	%r12
	.cfi_def_cfa_offset 32
	.cfi_offset 12, -32
	pushq	%rbp
	.cfi_def_cfa_offset 40
	.cfi_offset 6, -40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset 3, -48
	leaq	128(%rdi), %rbx
	xorl	%ebp, %ebp
	movl	$558694933, %r12d
	.p2align 4,,10
	.p2align 3
.L28:
	leaq	-128(%rbx), %r14
	xorl	%r13d, %r13d
	.p2align 4,,10
	.p2align 3
.L29:
	call	rand
	movl	%eax, %ecx
	movl	%r13d, %edx
	shrl	%edx
	movl	%edx, %eax
	mull	%r12d
	shrl	$4, %edx
	imull	$246, %edx, %edx
	movl	%r13d, %esi
	subl	%edx, %esi
	movl	$1717986919, %edx
	movl	%ecx, %eax
	imull	%edx
	sarl	$2, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	leal	(%rdx,%rdx,4), %eax
	addl	%eax, %eax
	subl	%eax, %ecx
	addl	%esi, %ecx
	movw	%cx, (%r14)
	addl	%ebp, %r13d
	addq	$2, %r14
	cmpq	%r14, %rbx
	jne	.L29
	incl	%ebp
	subq	$-128, %rbx
	cmpl	$64, %ebp
	jne	.L28
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%rbp
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r13
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE5465:
	.size	assignMatrixi16, .-assignMatrixi16
	.p2align 4,,15
	.globl	assignImagei16
	.type	assignImagei16, @function
assignImagei16:
.LFB5487:
	.cfi_startproc
	pushq	%r14
	.cfi_def_cfa_offset 16
	.cfi_offset 14, -16
	pushq	%r13
	.cfi_def_cfa_offset 24
	.cfi_offset 13, -24
	pushq	%r12
	.cfi_def_cfa_offset 32
	.cfi_offset 12, -32
	pushq	%rbp
	.cfi_def_cfa_offset 40
	.cfi_offset 6, -40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset 3, -48
	leaq	128(%rdi), %rbx
	xorl	%ebp, %ebp
	movl	$558694933, %r12d
	.p2align 4,,10
	.p2align 3
.L35:
	leaq	-128(%rbx), %r14
	xorl	%r13d, %r13d
	.p2align 4,,10
	.p2align 3
.L36:
	call	rand
	movl	%eax, %ecx
	movl	%r13d, %edx
	shrl	%edx
	movl	%edx, %eax
	mull	%r12d
	shrl	$4, %edx
	imull	$246, %edx, %edx
	movl	%r13d, %esi
	subl	%edx, %esi
	movl	$1717986919, %edx
	movl	%ecx, %eax
	imull	%edx
	sarl	$2, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	leal	(%rdx,%rdx,4), %eax
	addl	%eax, %eax
	subl	%eax, %ecx
	addl	%esi, %ecx
	movw	%cx, (%r14)
	addl	%ebp, %r13d
	addq	$2, %r14
	cmpq	%r14, %rbx
	jne	.L36
	incl	%ebp
	subq	$-128, %rbx
	cmpl	$64, %ebp
	jne	.L35
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%rbp
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r13
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE5487:
	.size	assignImagei16, .-assignImagei16
	.p2align 4,,15
	.globl	imageTranspose
	.type	imageTranspose, @function
imageTranspose:
.LFB5467:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	andq	$-32, %rsp
	.cfi_offset 15, -24
	.cfi_offset 14, -32
	.cfi_offset 13, -40
	.cfi_offset 12, -48
	.cfi_offset 3, -56
	movq	%rdi, %rax
	movq	%rdi, %r8
	movl	$272, %r11d
	xorl	%r10d, %r10d
	movl	$1, %esi
	movl	$268, %r15d
	subq	%rdi, %r15
	movl	$4, %edx
	subq	%rdi, %rdx
	movq	%rdx, -8(%rsp)
	jmp	.L42
	.p2align 4,,10
	.p2align 3
.L87:
	cmpl	$6, %r10d
	jbe	.L50
	movl	%esi, %edx
	shrl	$3, %edx
	vmovups	268(%r8), %ymm0
	vmovss	1612(%rax), %xmm2
	vinsertps	$0x10, 1880(%rax), %xmm2, %xmm3
	vmovss	1076(%rax), %xmm2
	vinsertps	$0x10, 1344(%rax), %xmm2, %xmm2
	vmovss	540(%rax), %xmm1
	vinsertps	$0x10, 808(%rax), %xmm1, %xmm4
	vmovss	4(%rax), %xmm1
	vinsertps	$0x10, 272(%rax), %xmm1, %xmm1
	vmovlhps	%xmm4, %xmm1, %xmm1
	vmovlhps	%xmm3, %xmm2, %xmm2
	vinsertf128	$0x1, %xmm2, %ymm1, %ymm1
	vmovups	%ymm1, 268(%r8)
	vmovss	%xmm0, 4(%rax)
	vextractps	$1, %xmm0, 272(%rax)
	vextractps	$2, %xmm0, 540(%rax)
	vextractps	$3, %xmm0, 808(%rax)
	vextractf128	$0x1, %ymm0, %xmm0
	vmovss	%xmm0, 1076(%rax)
	vextractps	$1, %xmm0, 1344(%rax)
	vextractps	$2, %xmm0, 1612(%rax)
	vextractps	$3, %xmm0, 1880(%rax)
	cmpl	$1, %edx
	je	.L43
	vmovups	300(%r8), %ymm0
	vmovss	3756(%rax), %xmm2
	vinsertps	$0x10, 4024(%rax), %xmm2, %xmm3
	vmovss	3220(%rax), %xmm2
	vinsertps	$0x10, 3488(%rax), %xmm2, %xmm2
	vmovss	2684(%rax), %xmm1
	vinsertps	$0x10, 2952(%rax), %xmm1, %xmm4
	vmovss	2148(%rax), %xmm1
	vinsertps	$0x10, 2416(%rax), %xmm1, %xmm1
	vmovlhps	%xmm4, %xmm1, %xmm1
	vmovlhps	%xmm3, %xmm2, %xmm2
	vinsertf128	$0x1, %xmm2, %ymm1, %ymm1
	vmovups	%ymm1, 300(%r8)
	vmovss	%xmm0, 2148(%rax)
	vextractps	$1, %xmm0, 2416(%rax)
	vextractps	$2, %xmm0, 2684(%rax)
	vextractps	$3, %xmm0, 2952(%rax)
	vextractf128	$0x1, %ymm0, %xmm0
	vmovss	%xmm0, 3220(%rax)
	vextractps	$1, %xmm0, 3488(%rax)
	vextractps	$2, %xmm0, 3756(%rax)
	vextractps	$3, %xmm0, 4024(%rax)
	cmpl	$2, %edx
	je	.L43
	vmovups	332(%r8), %ymm0
	vmovss	5900(%rax), %xmm2
	vinsertps	$0x10, 6168(%rax), %xmm2, %xmm3
	vmovss	5364(%rax), %xmm2
	vinsertps	$0x10, 5632(%rax), %xmm2, %xmm2
	vmovss	4828(%rax), %xmm1
	vinsertps	$0x10, 5096(%rax), %xmm1, %xmm4
	vmovss	4292(%rax), %xmm1
	vinsertps	$0x10, 4560(%rax), %xmm1, %xmm1
	vmovlhps	%xmm4, %xmm1, %xmm1
	vmovlhps	%xmm3, %xmm2, %xmm2
	vinsertf128	$0x1, %xmm2, %ymm1, %ymm1
	vmovups	%ymm1, 332(%r8)
	vmovss	%xmm0, 4292(%rax)
	vextractps	$1, %xmm0, 4560(%rax)
	vextractps	$2, %xmm0, 4828(%rax)
	vextractps	$3, %xmm0, 5096(%rax)
	vextractf128	$0x1, %ymm0, %xmm0
	vmovss	%xmm0, 5364(%rax)
	vextractps	$1, %xmm0, 5632(%rax)
	vextractps	$2, %xmm0, 5900(%rax)
	vextractps	$3, %xmm0, 6168(%rax)
	cmpl	$3, %edx
	je	.L43
	vmovups	364(%r8), %ymm0
	vmovss	8044(%rax), %xmm2
	vinsertps	$0x10, 8312(%rax), %xmm2, %xmm3
	vmovss	7508(%rax), %xmm2
	vinsertps	$0x10, 7776(%rax), %xmm2, %xmm2
	vmovss	6972(%rax), %xmm1
	vinsertps	$0x10, 7240(%rax), %xmm1, %xmm4
	vmovss	6436(%rax), %xmm1
	vinsertps	$0x10, 6704(%rax), %xmm1, %xmm1
	vmovlhps	%xmm4, %xmm1, %xmm1
	vmovlhps	%xmm3, %xmm2, %xmm2
	vinsertf128	$0x1, %xmm2, %ymm1, %ymm1
	vmovups	%ymm1, 364(%r8)
	vmovss	%xmm0, 6436(%rax)
	vextractps	$1, %xmm0, 6704(%rax)
	vextractps	$2, %xmm0, 6972(%rax)
	vextractps	$3, %xmm0, 7240(%rax)
	vextractf128	$0x1, %ymm0, %xmm0
	vmovss	%xmm0, 7508(%rax)
	vextractps	$1, %xmm0, 7776(%rax)
	vextractps	$2, %xmm0, 8044(%rax)
	vextractps	$3, %xmm0, 8312(%rax)
	cmpl	$4, %edx
	je	.L43
	vmovups	396(%r8), %ymm0
	vmovss	10188(%rax), %xmm2
	vinsertps	$0x10, 10456(%rax), %xmm2, %xmm3
	vmovss	9652(%rax), %xmm2
	vinsertps	$0x10, 9920(%rax), %xmm2, %xmm2
	vmovss	9116(%rax), %xmm1
	vinsertps	$0x10, 9384(%rax), %xmm1, %xmm4
	vmovss	8580(%rax), %xmm1
	vinsertps	$0x10, 8848(%rax), %xmm1, %xmm1
	vmovlhps	%xmm4, %xmm1, %xmm1
	vmovlhps	%xmm3, %xmm2, %xmm2
	vinsertf128	$0x1, %xmm2, %ymm1, %ymm1
	vmovups	%ymm1, 396(%r8)
	vmovss	%xmm0, 8580(%rax)
	vextractps	$1, %xmm0, 8848(%rax)
	vextractps	$2, %xmm0, 9116(%rax)
	vextractps	$3, %xmm0, 9384(%rax)
	vextractf128	$0x1, %ymm0, %xmm0
	vmovss	%xmm0, 9652(%rax)
	vextractps	$1, %xmm0, 9920(%rax)
	vextractps	$2, %xmm0, 10188(%rax)
	vextractps	$3, %xmm0, 10456(%rax)
	cmpl	$5, %edx
	je	.L43
	vmovups	428(%r8), %ymm0
	vmovss	12332(%rax), %xmm2
	vinsertps	$0x10, 12600(%rax), %xmm2, %xmm3
	vmovss	11796(%rax), %xmm2
	vinsertps	$0x10, 12064(%rax), %xmm2, %xmm2
	vmovss	11260(%rax), %xmm1
	vinsertps	$0x10, 11528(%rax), %xmm1, %xmm4
	vmovss	10724(%rax), %xmm1
	vinsertps	$0x10, 10992(%rax), %xmm1, %xmm1
	vmovlhps	%xmm4, %xmm1, %xmm1
	vmovlhps	%xmm3, %xmm2, %xmm2
	vinsertf128	$0x1, %xmm2, %ymm1, %ymm1
	vmovups	%ymm1, 428(%r8)
	vmovss	%xmm0, 10724(%rax)
	vextractps	$1, %xmm0, 10992(%rax)
	vextractps	$2, %xmm0, 11260(%rax)
	vextractps	$3, %xmm0, 11528(%rax)
	vextractf128	$0x1, %ymm0, %xmm0
	vmovss	%xmm0, 11796(%rax)
	vextractps	$1, %xmm0, 12064(%rax)
	vextractps	$2, %xmm0, 12332(%rax)
	vextractps	$3, %xmm0, 12600(%rax)
	cmpl	$7, %edx
	jne	.L43
	vmovups	460(%r8), %ymm0
	vmovss	14476(%rax), %xmm2
	vinsertps	$0x10, 14744(%rax), %xmm2, %xmm3
	vmovss	13940(%rax), %xmm2
	vinsertps	$0x10, 14208(%rax), %xmm2, %xmm2
	vmovss	13404(%rax), %xmm1
	vinsertps	$0x10, 13672(%rax), %xmm1, %xmm4
	vmovss	12868(%rax), %xmm1
	vinsertps	$0x10, 13136(%rax), %xmm1, %xmm1
	vmovlhps	%xmm4, %xmm1, %xmm1
	vmovlhps	%xmm3, %xmm2, %xmm2
	vinsertf128	$0x1, %xmm2, %ymm1, %ymm1
	vmovups	%ymm1, 460(%r8)
	vmovss	%xmm0, 12868(%rax)
	vextractps	$1, %xmm0, 13136(%rax)
	vextractps	$2, %xmm0, 13404(%rax)
	vextractps	$3, %xmm0, 13672(%rax)
	vextractf128	$0x1, %ymm0, %xmm0
	vmovss	%xmm0, 13940(%rax)
	vextractps	$1, %xmm0, 14208(%rax)
	vextractps	$2, %xmm0, 14476(%rax)
	vextractps	$3, %xmm0, 14744(%rax)
.L43:
	movl	%esi, %edx
	andl	$-8, %edx
	cmpl	%esi, %edx
	je	.L86
	movl	%edx, %r8d
	leaq	(%rcx,%r8,4), %r12
	vmovss	(%r12), %xmm0
	imulq	$268, %r8, %r8
	movslq	%esi, %r9
	salq	$2, %r9
	leaq	(%r8,%r9), %rbx
	addq	%rdi, %rbx
	vmovss	(%rbx), %xmm1
	vmovss	%xmm1, (%r12)
	vmovss	%xmm0, (%rbx)
	leal	1(%rdx), %r13d
	cmpl	%r10d, %edx
	jge	.L86
	movslq	%r13d, %rbx
	leaq	(%rcx,%rbx,4), %r14
	vmovss	(%r14), %xmm0
	leaq	268(%r8,%r9), %rbx
	addq	%rdi, %rbx
	vmovss	(%rbx), %xmm1
	vmovss	%xmm1, (%r14)
	vmovss	%xmm0, (%rbx)
	leal	2(%rdx), %r14d
	cmpl	%r10d, %r13d
	jge	.L86
	movslq	%r14d, %rbx
	leaq	(%rcx,%rbx,4), %r13
	vmovss	0(%r13), %xmm0
	leaq	536(%r8,%r9), %rbx
	addq	%rdi, %rbx
	vmovss	(%rbx), %xmm1
	vmovss	%xmm1, 0(%r13)
	vmovss	%xmm0, (%rbx)
	leal	3(%rdx), %r13d
	cmpl	%r10d, %r14d
	jge	.L86
	movslq	%r13d, %rbx
	leaq	(%rcx,%rbx,4), %r14
	vmovss	(%r14), %xmm0
	leaq	804(%r8,%r9), %rbx
	addq	%rdi, %rbx
	vmovss	(%rbx), %xmm1
	vmovss	%xmm1, (%r14)
	vmovss	%xmm0, (%rbx)
	leal	4(%rdx), %r14d
	cmpl	%r10d, %r13d
	jge	.L86
	movslq	%r14d, %rbx
	leaq	(%rcx,%rbx,4), %r13
	vmovss	0(%r13), %xmm0
	leaq	1072(%r8,%r9), %rbx
	addq	%rdi, %rbx
	vmovss	(%rbx), %xmm1
	vmovss	%xmm1, 0(%r13)
	vmovss	%xmm0, (%rbx)
	leal	5(%rdx), %ebx
	cmpl	%r10d, %r14d
	jge	.L86
	movslq	%ebx, %rbx
	movq	%rbx, %r14
	leaq	(%rcx,%rbx,4), %r13
	vmovss	0(%r13), %xmm0
	leaq	1340(%r8,%r9), %rbx
	addq	%rdi, %rbx
	vmovss	(%rbx), %xmm1
	vmovss	%xmm1, 0(%r13)
	vmovss	%xmm0, (%rbx)
	addl	$6, %edx
	cmpl	%r10d, %r14d
	jge	.L86
	movslq	%edx, %rdx
	leaq	(%rcx,%rdx,4), %rbx
	vmovss	(%rbx), %xmm0
	leaq	1608(%r8,%r9), %rdx
	addq	%rdi, %rdx
	vmovss	(%rdx), %xmm1
	vmovss	%xmm1, (%rbx)
	vmovss	%xmm0, (%rdx)
.L86:
	addq	$4, %rax
.L46:
	incl	%esi
	incq	%r10
	movq	%rcx, %r8
	addq	$272, %r11
	cmpl	$64, %esi
	je	.L84
.L42:
	leaq	268(%r8), %rcx
	movq	%rcx, %rdx
	leaq	-264(%r11), %rbx
	leaq	(%r15,%r8), %r9
	cmpq	%r9, %rbx
	setle	%bl
	movq	-8(%rsp), %r14
	leaq	(%r14,%rax), %r9
	cmpq	%r9, %r11
	setle	%r9b
	orb	%r9b, %bl
	jne	.L87
.L50:
	addq	$4, %rax
	movq	%rax, %r8
	leaq	(%rdi,%r11), %r9
	.p2align 4,,10
	.p2align 3
.L45:
	vmovss	(%rdx), %xmm0
	vmovss	(%r8), %xmm1
	vmovss	%xmm1, (%rdx)
	vmovss	%xmm0, (%r8)
	addq	$4, %rdx
	addq	$268, %r8
	cmpq	%r9, %rdx
	jne	.L45
	jmp	.L46
.L84:
	vzeroupper
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE5467:
	.size	imageTranspose, .-imageTranspose
	.p2align 4,,15
	.globl	assignMatrixui16
	.type	assignMatrixui16, @function
assignMatrixui16:
.LFB5468:
	.cfi_startproc
	xorl	%eax, %eax
	vmovdqa	.LC14(%rip), %ymm10
	vmovdqa	.LC15(%rip), %ymm9
	vmovdqa	.LC16(%rip), %ymm1
	vmovdqa	.LC17(%rip), %ymm8
	vmovdqa	.LC18(%rip), %ymm7
	vmovdqa	.LC19(%rip), %ymm6
	vmovdqa	.LC20(%rip), %ymm5
	vmovdqa	.LC21(%rip), %ymm4
	vmovdqa	.LC22(%rip), %ymm3
	.p2align 4,,10
	.p2align 3
.L89:
	vmovd	%eax, %xmm0
	vpbroadcastd	%xmm0, %ymm0
	vpaddd	%ymm10, %ymm0, %ymm2
	vpaddd	%ymm9, %ymm0, %ymm11
	vpand	%ymm2, %ymm1, %ymm2
	vpand	%ymm11, %ymm1, %ymm11
	vpackusdw	%ymm11, %ymm2, %ymm2
	vpermq	$216, %ymm2, %ymm2
	vmovdqu	%ymm2, (%rdi)
	vpaddd	%ymm8, %ymm0, %ymm2
	vpaddd	%ymm7, %ymm0, %ymm11
	vpand	%ymm2, %ymm1, %ymm2
	vpand	%ymm11, %ymm1, %ymm11
	vpackusdw	%ymm11, %ymm2, %ymm2
	vpermq	$216, %ymm2, %ymm2
	vmovdqu	%ymm2, 32(%rdi)
	vpaddd	%ymm6, %ymm0, %ymm2
	vpaddd	%ymm5, %ymm0, %ymm11
	vpand	%ymm2, %ymm1, %ymm2
	vpand	%ymm11, %ymm1, %ymm11
	vpackusdw	%ymm11, %ymm2, %ymm2
	vpermq	$216, %ymm2, %ymm2
	vmovdqu	%ymm2, 64(%rdi)
	vpaddd	%ymm4, %ymm0, %ymm2
	vpaddd	%ymm3, %ymm0, %ymm0
	vpand	%ymm2, %ymm1, %ymm2
	vpand	%ymm0, %ymm1, %ymm0
	vpackusdw	%ymm0, %ymm2, %ymm0
	vpermq	$216, %ymm0, %ymm0
	vmovdqu	%ymm0, 96(%rdi)
	incl	%eax
	subq	$-128, %rdi
	cmpl	$64, %eax
	jne	.L89
	vzeroupper
	ret
	.cfi_endproc
.LFE5468:
	.size	assignMatrixui16, .-assignMatrixui16
	.p2align 4,,15
	.globl	assignMatrixi8
	.type	assignMatrixi8, @function
assignMatrixi8:
.LFB5469:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	leaq	64(%rdi), %rbp
	xorl	%ebx, %ebx
	.p2align 4,,10
	.p2align 3
.L92:
	leaq	-64(%rbp), %r12
	xorl	%r13d, %r13d
	.p2align 4,,10
	.p2align 3
.L93:
	call	rand
	movzbl	%r13b, %edx
	movl	%eax, %ecx
	shrl	$31, %ecx
	addl	%ecx, %eax
	andl	$1, %eax
	subl	%ecx, %eax
	addl	%edx, %eax
	cltd
	shrl	$24, %edx
	addl	%edx, %eax
	movzbl	%al, %eax
	subl	%edx, %eax
	movb	%al, (%r12)
	addl	%ebx, %r13d
	incq	%r12
	cmpq	%rbp, %r12
	jne	.L93
	incl	%ebx
	leaq	64(%r12), %rbp
	cmpl	$64, %ebx
	jne	.L92
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE5469:
	.size	assignMatrixi8, .-assignMatrixi8
	.p2align 4,,15
	.globl	assignArrayi32
	.type	assignArrayi32, @function
assignArrayi32:
.LFB5470:
	.cfi_startproc
	leaq	16384(%rdi), %rax
	vmovdqa	.LC23(%rip), %ymm4
	vmovdqa	.LC3(%rip), %ymm3
	vmovdqa	.LC24(%rip), %ymm6
	vmovdqa	.LC4(%rip), %ymm5
	vmovdqa	.LC5(%rip), %ymm8
	vmovdqa	.LC6(%rip), %ymm7
	.p2align 4,,10
	.p2align 3
.L99:
	vpmulld	%ymm3, %ymm4, %ymm2
	vpsrlq	$32, %ymm2, %ymm1
	vpmuldq	%ymm5, %ymm2, %ymm0
	vpmuldq	%ymm5, %ymm1, %ymm1
	vpshufb	%ymm8, %ymm0, %ymm0
	vpshufb	%ymm7, %ymm1, %ymm1
	vpor	%ymm1, %ymm0, %ymm0
	vpsrad	$6, %ymm0, %ymm1
	vpslld	$5, %ymm1, %ymm0
	vpsubd	%ymm1, %ymm0, %ymm0
	vpslld	$2, %ymm0, %ymm0
	vpaddd	%ymm1, %ymm0, %ymm0
	vpslld	$3, %ymm0, %ymm0
	vpsubd	%ymm0, %ymm2, %ymm0
	vmovdqu	%ymm0, (%rdi)
	addq	$32, %rdi
	vpaddd	%ymm6, %ymm3, %ymm3
	vpaddd	%ymm6, %ymm4, %ymm4
	cmpq	%rdi, %rax
	jne	.L99
	vzeroupper
	ret
	.cfi_endproc
.LFE5470:
	.size	assignArrayi32, .-assignArrayi32
	.section	.rodata.str1.1,"aMS",@progbits,1
.LC25:
	.string	"a"
.LC26:
	.string	"fileForOutPuts"
.LC27:
	.string	"%s - %dx%d \n"
.LC28:
	.string	"\n\n"
.LC29:
	.string	" A[%d][%d] = %lf, \n"
	.section	.rodata.str1.8,"aMS",@progbits,1
	.align 8
.LC30:
	.string	" \n*************************\n*********************FINISHED*********************\n***************** \n"
	.text
	.p2align 4,,15
	.globl	savefloatMatrixFileForOutPuts
	.type	savefloatMatrixFileForOutPuts, @function
savefloatMatrixFileForOutPuts:
.LFB5483:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rdi, %r12
	movl	$.LC25, %esi
	movl	$.LC26, %edi
	call	fopen
	movq	%rax, fileForOutPuts(%rip)
	movl	$64, %r8d
	movl	$64, %ecx
	movq	programName(%rip), %rdx
	movl	$.LC27, %esi
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	fprintf
	xorl	%ebp, %ebp
	.p2align 4,,10
	.p2align 3
.L103:
	movq	fileForOutPuts(%rip), %rcx
	movl	$2, %edx
	movl	$1, %esi
	movl	$.LC28, %edi
	call	fwrite
	xorl	%ebx, %ebx
	.p2align 4,,10
	.p2align 3
.L102:
	vcvtss2sd	(%r12,%rbx,4), %xmm0, %xmm0
	movl	%ebx, %ecx
	movl	%ebp, %edx
	movl	$.LC29, %esi
	movq	fileForOutPuts(%rip), %rdi
	movb	$1, %al
	call	fprintf
	incq	%rbx
	cmpq	$64, %rbx
	jne	.L102
	incl	%ebp
	addq	$256, %r12
	cmpl	$64, %ebp
	jne	.L103
	movq	fileForOutPuts(%rip), %rcx
	movl	$98, %edx
	movl	$1, %esi
	movl	$.LC30, %edi
	call	fwrite
	movq	fileForOutPuts(%rip), %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	fclose
	.cfi_endproc
.LFE5483:
	.size	savefloatMatrixFileForOutPuts, .-savefloatMatrixFileForOutPuts
	.section	.rodata.str1.1
.LC31:
	.string	" A[%d][%d] = %d, \n"
	.text
	.p2align 4,,15
	.globl	saveintMatrixFileForOutPuts
	.type	saveintMatrixFileForOutPuts, @function
saveintMatrixFileForOutPuts:
.LFB5484:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rdi, %r12
	movl	$.LC25, %esi
	movl	$.LC26, %edi
	call	fopen
	movq	%rax, fileForOutPuts(%rip)
	movl	$64, %r8d
	movl	$64, %ecx
	movq	programName(%rip), %rdx
	movl	$.LC27, %esi
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	fprintf
	xorl	%ebp, %ebp
	.p2align 4,,10
	.p2align 3
.L109:
	movq	fileForOutPuts(%rip), %rcx
	movl	$2, %edx
	movl	$1, %esi
	movl	$.LC28, %edi
	call	fwrite
	xorl	%ebx, %ebx
	.p2align 4,,10
	.p2align 3
.L108:
	movl	(%r12,%rbx,4), %r8d
	movl	%ebx, %ecx
	movl	%ebp, %edx
	movl	$.LC31, %esi
	movq	fileForOutPuts(%rip), %rdi
	xorl	%eax, %eax
	call	fprintf
	incq	%rbx
	cmpq	$64, %rbx
	jne	.L108
	incl	%ebp
	addq	$256, %r12
	cmpl	$64, %ebp
	jne	.L109
	movq	fileForOutPuts(%rip), %rcx
	movl	$98, %edx
	movl	$1, %esi
	movl	$.LC30, %edi
	call	fwrite
	movq	fileForOutPuts(%rip), %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	fclose
	.cfi_endproc
.LFE5484:
	.size	saveintMatrixFileForOutPuts, .-saveintMatrixFileForOutPuts
	.section	.rodata.str1.1
.LC32:
	.string	"CDF97FULLROWTRAROW"
	.section	.rodata.str1.8
	.align 8
.LC33:
	.string	"\nthe best is %lld in %lldth iteration and %lld repetitions\n"
	.section	.rodata.str1.1
.LC34:
	.string	"fileForSpeedups"
.LC35:
	.string	"%s, %dx%d, %lld\n"
.LC36:
	.string	"output = %f\n"
	.section	.text.startup,"ax",@progbits
	.p2align 4,,15
	.globl	main
	.type	main, @function
main:
.LFB5485:
	.cfi_startproc
	leaq	8(%rsp), %r10
	.cfi_def_cfa 10, 0
	andq	$-32, %rsp
	pushq	-8(%r10)
	pushq	%rbp
	.cfi_escape 0x10,0x6,0x2,0x76,0
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%r10
	.cfi_escape 0xf,0x3,0x76,0x58,0x6
	.cfi_escape 0x10,0xf,0x2,0x76,0x78
	.cfi_escape 0x10,0xe,0x2,0x76,0x70
	.cfi_escape 0x10,0xd,0x2,0x76,0x68
	.cfi_escape 0x10,0xc,0x2,0x76,0x60
	pushq	%rbx
	subq	$224, %rsp
	.cfi_escape 0x10,0x3,0x2,0x76,0x50
	movl	$3, %esi
	movl	$2, %edi
	call	assignToThisCore12
	movq	$.LC32, programName(%rip)
	movl	$32, half_row(%rip)
	movl	$32, half_col(%rip)
	movl	$in_image, %edi
	call	assignImagef32
	movq	$0, elapsed_rdtsc(%rip)
	movabsq	$9999999999, %rax
	movq	%rax, overal_time(%rip)
	movq	$0, ttime(%rip)
.L128:
#APP
# 31 "IMP1.c" 1
	#mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm1
# 0 "" 2
#NO_APP
	rdtsc
	salq	$32, %rdx
	orq	%rdx, %rax
	movq	%rax, t1_rdtsc(%rip)
	vmovss	low+16(%rip), %xmm7
	vmovss	%xmm7, -68(%rbp)
	vmovss	low+12(%rip), %xmm7
	vmovss	%xmm7, -72(%rbp)
	vmovss	low+8(%rip), %xmm7
	vmovss	%xmm7, -76(%rbp)
	vmovss	low+4(%rip), %xmm7
	vmovss	%xmm7, -80(%rbp)
	vmovss	low(%rip), %xmm7
	vmovss	%xmm7, -84(%rbp)
	vmovss	high+8(%rip), %xmm7
	vmovss	%xmm7, -52(%rbp)
	vmovss	high+4(%rip), %xmm7
	vmovss	%xmm7, -64(%rbp)
	vmovss	high(%rip), %xmm7
	vmovss	%xmm7, -56(%rbp)
	vmovss	high+12(%rip), %xmm7
	vmovss	%xmm7, -60(%rbp)
	movslq	half_col(%rip), %rsi
	movq	%rsi, %r11
	leaq	0(,%rsi,4), %rax
	movq	%rax, -96(%rbp)
	leaq	ou_image(%rax), %rdx
	leal	7(%rsi), %r8d
	xorl	%eax, %eax
	xorl	%ecx, %ecx
	leal	27(%rsi), %r10d
	leal	24(%rsi), %r13d
	movslq	%r13d, %r13
	subq	%rsi, %r13
	leal	25(%rsi), %r12d
	movslq	%r12d, %r12
	subq	%rsi, %r12
	leal	26(%rsi), %ebx
	movslq	%ebx, %rbx
	subq	%rsi, %rbx
	jmp	.L117
	.p2align 4,,10
	.p2align 3
.L140:
	vbroadcastss	-84(%rbp), %ymm13
	vbroadcastss	-80(%rbp), %ymm11
	vbroadcastss	-76(%rbp), %ymm12
	vbroadcastss	-72(%rbp), %ymm14
	vbroadcastss	-68(%rbp), %ymm7
	vbroadcastss	-64(%rbp), %ymm6
	vmovups	in_image(%rax), %ymm0
	vshufps	$136, in_image+32(%rax), %ymm0, %ymm2
	vperm2f128	$3, %ymm2, %ymm2, %ymm1
	vshufps	$68, %ymm1, %ymm2, %ymm3
	vshufps	$238, %ymm1, %ymm2, %ymm1
	vinsertf128	$1, %xmm1, %ymm3, %ymm1
	vshufps	$221, in_image+32(%rax), %ymm0, %ymm0
	vperm2f128	$3, %ymm0, %ymm0, %ymm2
	vshufps	$68, %ymm2, %ymm0, %ymm3
	vshufps	$238, %ymm2, %ymm0, %ymm2
	vinsertf128	$1, %xmm2, %ymm3, %ymm3
	vmovups	in_image+8(%rax), %ymm0
	vmovups	in_image+40(%rax), %ymm5
	vshufps	$136, %ymm5, %ymm0, %ymm4
	vperm2f128	$3, %ymm4, %ymm4, %ymm2
	vshufps	$68, %ymm2, %ymm4, %ymm8
	vshufps	$238, %ymm2, %ymm4, %ymm2
	vinsertf128	$1, %xmm2, %ymm8, %ymm2
	vshufps	$221, %ymm5, %ymm0, %ymm0
	vperm2f128	$3, %ymm0, %ymm0, %ymm4
	vshufps	$68, %ymm4, %ymm0, %ymm5
	vshufps	$238, %ymm4, %ymm0, %ymm4
	vinsertf128	$1, %xmm4, %ymm5, %ymm5
	vmovups	in_image+16(%rax), %ymm0
	vmovups	in_image+48(%rax), %ymm10
	vshufps	$136, %ymm10, %ymm0, %ymm9
	vperm2f128	$3, %ymm9, %ymm9, %ymm4
	vshufps	$68, %ymm4, %ymm9, %ymm8
	vshufps	$238, %ymm4, %ymm9, %ymm4
	vinsertf128	$1, %xmm4, %ymm8, %ymm8
	vshufps	$221, %ymm10, %ymm0, %ymm0
	vperm2f128	$3, %ymm0, %ymm0, %ymm4
	vshufps	$68, %ymm4, %ymm0, %ymm10
	vshufps	$238, %ymm4, %ymm0, %ymm4
	vinsertf128	$1, %xmm4, %ymm10, %ymm10
	vmovups	in_image+24(%rax), %ymm4
	vshufps	$136, in_image+56(%rax), %ymm4, %ymm15
	vperm2f128	$3, %ymm15, %ymm15, %ymm0
	vshufps	$68, %ymm0, %ymm15, %ymm9
	vshufps	$238, %ymm0, %ymm15, %ymm0
	vinsertf128	$1, %xmm0, %ymm9, %ymm9
	vshufps	$221, in_image+56(%rax), %ymm4, %ymm4
	vperm2f128	$3, %ymm4, %ymm4, %ymm15
	vshufps	$68, %ymm15, %ymm4, %ymm0
	vshufps	$238, %ymm15, %ymm4, %ymm15
	vinsertf128	$1, %xmm15, %ymm0, %ymm0
	vaddps	%ymm3, %ymm0, %ymm0
	vmovaps	%ymm14, -240(%rbp)
	vmulps	%ymm14, %ymm0, %ymm0
	vmovaps	%ymm13, -144(%rbp)
	vfmadd231ps	%ymm13, %ymm8, %ymm0
	vaddps	%ymm9, %ymm2, %ymm4
	vmovaps	%ymm12, -208(%rbp)
	vmulps	%ymm12, %ymm4, %ymm12
	vaddps	%ymm10, %ymm5, %ymm4
	vmovaps	%ymm11, -176(%rbp)
	vfmadd132ps	%ymm11, %ymm12, %ymm4
	vaddps	%ymm4, %ymm0, %ymm0
	vmovups	in_image+32(%rax), %ymm4
	vshufps	$136, in_image+64(%rax), %ymm4, %ymm4
	vperm2f128	$3, %ymm4, %ymm4, %ymm12
	vshufps	$68, %ymm12, %ymm4, %ymm11
	vshufps	$238, %ymm12, %ymm4, %ymm12
	vinsertf128	$1, %xmm12, %ymm11, %ymm11
	vaddps	%ymm1, %ymm11, %ymm11
	vfmadd231ps	%ymm11, %ymm7, %ymm0
	vmovups	%ymm0, ou_image(%rax)
	vaddps	%ymm10, %ymm3, %ymm3
	vmulps	%ymm6, %ymm3, %ymm3
	vaddps	%ymm9, %ymm1, %ymm1
	vbroadcastss	-52(%rbp), %ymm15
	vfmadd231ps	%ymm1, %ymm15, %ymm3
	vbroadcastss	-60(%rbp), %ymm10
	vmulps	%ymm5, %ymm10, %ymm5
	vaddps	%ymm8, %ymm2, %ymm2
	vbroadcastss	-56(%rbp), %ymm1
	vmovaps	%ymm1, -272(%rbp)
	vfmadd231ps	%ymm1, %ymm2, %ymm5
	vaddps	%ymm5, %ymm3, %ymm3
	vmovups	%ymm3, (%rdx)
	vmovups	in_image+96(%rax), %ymm0
	vmovups	in_image+64(%rax), %ymm3
	vshufps	$136, %ymm0, %ymm3, %ymm2
	vperm2f128	$3, %ymm2, %ymm2, %ymm1
	vshufps	$68, %ymm1, %ymm2, %ymm3
	vshufps	$238, %ymm1, %ymm2, %ymm1
	vinsertf128	$1, %xmm1, %ymm3, %ymm1
	vmovups	in_image+64(%rax), %ymm3
	vshufps	$221, %ymm0, %ymm3, %ymm2
	vperm2f128	$3, %ymm2, %ymm2, %ymm3
	vshufps	$68, %ymm3, %ymm2, %ymm4
	vshufps	$238, %ymm3, %ymm2, %ymm3
	vinsertf128	$1, %xmm3, %ymm4, %ymm4
	vmovups	in_image+72(%rax), %ymm2
	vmovups	in_image+104(%rax), %ymm8
	vshufps	$136, %ymm8, %ymm2, %ymm5
	vperm2f128	$3, %ymm5, %ymm5, %ymm3
	vshufps	$68, %ymm3, %ymm5, %ymm9
	vshufps	$238, %ymm3, %ymm5, %ymm3
	vinsertf128	$1, %xmm3, %ymm9, %ymm3
	vshufps	$221, %ymm8, %ymm2, %ymm2
	vperm2f128	$3, %ymm2, %ymm2, %ymm5
	vshufps	$68, %ymm5, %ymm2, %ymm9
	vshufps	$238, %ymm5, %ymm2, %ymm5
	vinsertf128	$1, %xmm5, %ymm9, %ymm9
	vmovups	in_image+80(%rax), %ymm2
	vmovups	in_image+112(%rax), %ymm12
	vshufps	$136, %ymm12, %ymm2, %ymm8
	vperm2f128	$3, %ymm8, %ymm8, %ymm5
	vshufps	$68, %ymm5, %ymm8, %ymm11
	vshufps	$238, %ymm5, %ymm8, %ymm5
	vinsertf128	$1, %xmm5, %ymm11, %ymm11
	vshufps	$221, %ymm12, %ymm2, %ymm2
	vperm2f128	$3, %ymm2, %ymm2, %ymm5
	vshufps	$68, %ymm5, %ymm2, %ymm13
	vshufps	$238, %ymm5, %ymm2, %ymm5
	vinsertf128	$1, %xmm5, %ymm13, %ymm13
	vmovups	in_image+88(%rax), %ymm14
	vshufps	$136, in_image+120(%rax), %ymm14, %ymm5
	vperm2f128	$3, %ymm5, %ymm5, %ymm2
	vshufps	$68, %ymm2, %ymm5, %ymm12
	vshufps	$238, %ymm2, %ymm5, %ymm2
	vinsertf128	$1, %xmm2, %ymm12, %ymm12
	vmovups	in_image+128(%rax), %ymm2
	vshufps	$136, %ymm2, %ymm0, %ymm0
	vperm2f128	$3, %ymm0, %ymm0, %ymm8
	vshufps	$68, %ymm8, %ymm0, %ymm5
	vshufps	$238, %ymm8, %ymm0, %ymm8
	vinsertf128	$1, %xmm8, %ymm5, %ymm5
	vaddps	%ymm1, %ymm5, %ymm5
	vmulps	%ymm7, %ymm5, %ymm5
	vshufps	$221, in_image+120(%rax), %ymm14, %ymm8
	vperm2f128	$3, %ymm8, %ymm8, %ymm14
	vshufps	$68, %ymm14, %ymm8, %ymm0
	vshufps	$238, %ymm14, %ymm8, %ymm14
	vinsertf128	$1, %xmm14, %ymm0, %ymm0
	vaddps	%ymm4, %ymm0, %ymm0
	vfmadd231ps	-240(%rbp), %ymm0, %ymm5
	vaddps	%ymm12, %ymm3, %ymm8
	vmulps	-208(%rbp), %ymm8, %ymm8
	vaddps	%ymm13, %ymm9, %ymm0
	vfmadd132ps	-176(%rbp), %ymm8, %ymm0
	vaddps	%ymm0, %ymm5, %ymm0
	vfmadd231ps	-144(%rbp), %ymm11, %ymm0
	vmovups	%ymm0, ou_image+32(%rax)
	vaddps	%ymm13, %ymm4, %ymm4
	vmulps	%ymm6, %ymm4, %ymm4
	vaddps	%ymm12, %ymm1, %ymm1
	vfmadd132ps	%ymm15, %ymm4, %ymm1
	vmulps	%ymm9, %ymm10, %ymm9
	vaddps	%ymm11, %ymm3, %ymm3
	vfmadd231ps	-272(%rbp), %ymm3, %ymm9
	vaddps	%ymm9, %ymm1, %ymm1
	vmovups	%ymm1, 32(%rdx)
	vmovups	in_image+160(%rax), %ymm3
	vshufps	$136, %ymm3, %ymm2, %ymm1
	vperm2f128	$3, %ymm1, %ymm1, %ymm0
	vshufps	$68, %ymm0, %ymm1, %ymm12
	vshufps	$238, %ymm0, %ymm1, %ymm0
	vinsertf128	$1, %xmm0, %ymm12, %ymm12
	vshufps	$221, %ymm3, %ymm2, %ymm2
	vperm2f128	$3, %ymm2, %ymm2, %ymm0
	vshufps	$68, %ymm0, %ymm2, %ymm14
	vshufps	$238, %ymm0, %ymm2, %ymm0
	vinsertf128	$1, %xmm0, %ymm14, %ymm14
	vmovups	in_image+136(%rax), %ymm0
	vmovups	in_image+168(%rax), %ymm4
	vshufps	$136, %ymm4, %ymm0, %ymm2
	vperm2f128	$3, %ymm2, %ymm2, %ymm1
	vshufps	$68, %ymm1, %ymm2, %ymm9
	vshufps	$238, %ymm1, %ymm2, %ymm1
	vinsertf128	$1, %xmm1, %ymm9, %ymm9
	vshufps	$221, %ymm4, %ymm0, %ymm0
	vperm2f128	$3, %ymm0, %ymm0, %ymm1
	vshufps	$68, %ymm1, %ymm0, %ymm5
	vshufps	$238, %ymm1, %ymm0, %ymm1
	vinsertf128	$1, %xmm1, %ymm5, %ymm5
	vmovups	in_image+144(%rax), %ymm0
	vmovups	in_image+176(%rax), %ymm4
	vshufps	$136, %ymm4, %ymm0, %ymm2
	vperm2f128	$3, %ymm2, %ymm2, %ymm1
	vshufps	$68, %ymm1, %ymm2, %ymm8
	vshufps	$238, %ymm1, %ymm2, %ymm1
	vinsertf128	$1, %xmm1, %ymm8, %ymm1
	vshufps	$221, %ymm4, %ymm0, %ymm4
	vperm2f128	$3, %ymm4, %ymm4, %ymm0
	vshufps	$68, %ymm0, %ymm4, %ymm2
	vshufps	$238, %ymm0, %ymm4, %ymm0
	vinsertf128	$1, %xmm0, %ymm2, %ymm0
	vmovups	in_image+152(%rax), %ymm4
	vmovups	in_image+184(%rax), %ymm13
	vshufps	$136, %ymm13, %ymm4, %ymm11
	vperm2f128	$3, %ymm11, %ymm11, %ymm2
	vshufps	$68, %ymm2, %ymm11, %ymm8
	vshufps	$238, %ymm2, %ymm11, %ymm2
	vinsertf128	$1, %xmm2, %ymm8, %ymm8
	vshufps	$136, in_image+192(%rax), %ymm3, %ymm2
	vperm2f128	$3, %ymm2, %ymm2, %ymm11
	vshufps	$68, %ymm11, %ymm2, %ymm3
	vshufps	$238, %ymm11, %ymm2, %ymm11
	vinsertf128	$1, %xmm11, %ymm3, %ymm3
	vaddps	%ymm12, %ymm3, %ymm3
	vmulps	%ymm7, %ymm3, %ymm7
	vshufps	$221, %ymm13, %ymm4, %ymm4
	vperm2f128	$3, %ymm4, %ymm4, %ymm3
	vshufps	$68, %ymm3, %ymm4, %ymm2
	vshufps	$238, %ymm3, %ymm4, %ymm3
	vinsertf128	$1, %xmm3, %ymm2, %ymm2
	vaddps	%ymm14, %ymm2, %ymm2
	vfmadd231ps	-240(%rbp), %ymm2, %ymm7
	vaddps	%ymm9, %ymm8, %ymm11
	vmulps	-208(%rbp), %ymm11, %ymm11
	vaddps	%ymm5, %ymm0, %ymm2
	vfmadd231ps	-176(%rbp), %ymm2, %ymm11
	vaddps	%ymm11, %ymm7, %ymm7
	vfmadd231ps	-144(%rbp), %ymm1, %ymm7
	vmovups	%ymm7, ou_image+64(%rax)
	vaddps	%ymm12, %ymm8, %ymm8
	vaddps	%ymm14, %ymm0, %ymm0
	vmulps	%ymm6, %ymm0, %ymm6
	vfmadd231ps	%ymm15, %ymm8, %ymm6
	vaddps	%ymm9, %ymm1, %ymm1
	vmulps	%ymm10, %ymm5, %ymm10
	vfmadd231ps	-272(%rbp), %ymm1, %ymm10
	vaddps	%ymm10, %ymm6, %ymm6
	vmovups	%ymm6, 64(%rdx)
	vmovss	in_image+196(%rax), %xmm9
	vmovss	in_image+204(%rax), %xmm6
	vmovss	in_image+212(%rax), %xmm4
	vmovss	in_image+200(%rax), %xmm5
	vmovss	in_image+208(%rax), %xmm1
	vmovss	in_image+216(%rax), %xmm0
	vmovss	in_image+192(%rax), %xmm7
	vmovss	in_image+220(%rax), %xmm3
	vmovss	in_image+224(%rax), %xmm2
	vaddss	%xmm0, %xmm5, %xmm8
	vmovss	-76(%rbp), %xmm13
	vmulss	%xmm13, %xmm8, %xmm8
	vaddss	%xmm4, %xmm6, %xmm10
	vmovss	-80(%rbp), %xmm15
	vfmadd132ss	%xmm15, %xmm8, %xmm10
	vaddss	%xmm7, %xmm2, %xmm8
	vmovss	-68(%rbp), %xmm14
	vmulss	%xmm14, %xmm8, %xmm8
	vmovss	-84(%rbp), %xmm12
	vfmadd231ss	%xmm12, %xmm1, %xmm8
	vaddss	%xmm8, %xmm10, %xmm8
	vaddss	%xmm9, %xmm3, %xmm10
	vmovss	-72(%rbp), %xmm11
	vfmadd231ss	%xmm11, %xmm10, %xmm8
	vmovss	%xmm8, ou_image+96(%rax)
	vaddss	%xmm4, %xmm9, %xmm9
	vmulss	-64(%rbp), %xmm9, %xmm9
	vaddss	%xmm0, %xmm7, %xmm7
	vfmadd132ss	-52(%rbp), %xmm9, %xmm7
	vmulss	-60(%rbp), %xmm6, %xmm9
	vaddss	%xmm1, %xmm5, %xmm8
	vfmadd132ss	-56(%rbp), %xmm9, %xmm8
	vaddss	%xmm8, %xmm7, %xmm8
	vmovss	%xmm8, (%rdx,%r13,4)
	vmovss	in_image+228(%rax), %xmm7
	vmovss	in_image+232(%rax), %xmm9
	vaddss	%xmm1, %xmm2, %xmm8
	vmulss	%xmm13, %xmm8, %xmm8
	vaddss	%xmm4, %xmm3, %xmm10
	vfmadd132ss	%xmm15, %xmm8, %xmm10
	vaddss	%xmm9, %xmm5, %xmm8
	vmulss	%xmm14, %xmm8, %xmm8
	vfmadd231ss	%xmm12, %xmm0, %xmm8
	vaddss	%xmm8, %xmm10, %xmm8
	vaddss	%xmm7, %xmm6, %xmm10
	vfmadd231ss	%xmm11, %xmm10, %xmm8
	vmovss	%xmm8, ou_image+100(%rax)
	vaddss	%xmm6, %xmm3, %xmm6
	vmovss	-64(%rbp), %xmm10
	vmulss	%xmm10, %xmm6, %xmm6
	vaddss	%xmm5, %xmm2, %xmm5
	vfmadd132ss	-52(%rbp), %xmm6, %xmm5
	vmulss	-60(%rbp), %xmm4, %xmm8
	vaddss	%xmm0, %xmm1, %xmm6
	vfmadd132ss	-56(%rbp), %xmm8, %xmm6
	vaddss	%xmm6, %xmm5, %xmm6
	vmovss	%xmm6, (%rdx,%r12,4)
	vaddss	%xmm9, %xmm0, %xmm5
	vmulss	%xmm13, %xmm5, %xmm5
	vaddss	%xmm7, %xmm3, %xmm6
	vfmadd132ss	%xmm15, %xmm5, %xmm6
	vaddss	in_image+236(%rax), %xmm4, %xmm5
	vmulss	%xmm11, %xmm5, %xmm5
	vfmadd231ss	%xmm12, %xmm2, %xmm5
	vaddss	%xmm5, %xmm6, %xmm5
	vaddss	in_image+240(%rax), %xmm1, %xmm6
	vfmadd231ss	%xmm14, %xmm6, %xmm5
	vmovss	%xmm5, ou_image+104(%rax)
	vaddss	%xmm7, %xmm4, %xmm4
	vmulss	%xmm10, %xmm4, %xmm4
	vaddss	%xmm1, %xmm9, %xmm1
	vfmadd132ss	-52(%rbp), %xmm4, %xmm1
	vmulss	-60(%rbp), %xmm3, %xmm5
	vaddss	%xmm0, %xmm2, %xmm4
	vfmadd132ss	-56(%rbp), %xmm5, %xmm4
	vaddss	%xmm4, %xmm1, %xmm1
	vmovss	%xmm1, (%rdx,%rbx,4)
	vmovss	in_image+236(%rax), %xmm8
	vmovss	in_image+240(%rax), %xmm6
	vaddss	in_image+248(%rax), %xmm0, %xmm1
	vmulss	%xmm14, %xmm1, %xmm1
	vaddss	in_image+244(%rax), %xmm3, %xmm4
	vfmadd231ss	%xmm11, %xmm4, %xmm1
	vaddss	%xmm6, %xmm2, %xmm5
	vmulss	%xmm13, %xmm5, %xmm5
	vaddss	%xmm8, %xmm7, %xmm4
	vfmadd132ss	%xmm15, %xmm5, %xmm4
	vaddss	%xmm4, %xmm1, %xmm4
	vfmadd231ss	%xmm12, %xmm9, %xmm4
	vmovss	%xmm4, ou_image+108(%rax)
	movslq	%r10d, %rdi
	subq	%rsi, %rdi
	vaddss	%xmm8, %xmm3, %xmm3
	vmulss	%xmm10, %xmm3, %xmm3
	vaddss	%xmm6, %xmm0, %xmm0
	vfmadd132ss	-52(%rbp), %xmm3, %xmm0
	vmulss	-60(%rbp), %xmm7, %xmm7
	vaddss	%xmm9, %xmm2, %xmm2
	vfmadd132ss	-56(%rbp), %xmm7, %xmm2
	vaddss	%xmm2, %xmm0, %xmm0
	vmovss	%xmm0, (%rdx,%rdi,4)
.L115:
	incl	%ecx
	addq	$256, %rdx
	addq	$256, %rax
	cmpl	$64, %ecx
	je	.L139
.L117:
	cmpl	$14, %r8d
	ja	.L140
	vmovss	in_image+4(%rax), %xmm6
	vmovss	in_image+12(%rax), %xmm4
	vmovss	in_image+20(%rax), %xmm3
	vmovss	in_image+8(%rax), %xmm2
	vmovss	in_image+16(%rax), %xmm1
	vmovss	in_image+24(%rax), %xmm0
	leaq	in_image(%rax), %rdi
	leaq	ou_image(%rax), %r9
	xorl	%r14d, %r14d
	movl	$4, %r15d
	vmovss	-52(%rbp), %xmm9
	vmovss	-64(%rbp), %xmm10
	vmovss	-56(%rbp), %xmm11
	vmovss	-60(%rbp), %xmm12
.L116:
	vmovss	(%rdi), %xmm5
	vaddss	%xmm1, %xmm2, %xmm13
	vaddss	%xmm0, %xmm2, %xmm2
	vmulss	-76(%rbp), %xmm2, %xmm2
	vaddss	%xmm3, %xmm4, %xmm14
	vfmadd132ss	-80(%rbp), %xmm2, %xmm14
	vmovss	28(%rdi), %xmm8
	vmovss	32(%rdi), %xmm2
	vaddss	%xmm5, %xmm2, %xmm15
	vmulss	-68(%rbp), %xmm15, %xmm15
	vaddss	%xmm6, %xmm8, %xmm7
	vfmadd132ss	-72(%rbp), %xmm15, %xmm7
	vaddss	%xmm14, %xmm7, %xmm7
	vfmadd231ss	-84(%rbp), %xmm1, %xmm7
	vmovss	%xmm7, (%r9)
	vmulss	%xmm4, %xmm12, %xmm7
	vaddss	%xmm0, %xmm5, %xmm5
	vfmadd132ss	%xmm9, %xmm7, %xmm5
	vmulss	%xmm13, %xmm11, %xmm13
	vaddss	%xmm3, %xmm6, %xmm6
	vfmadd231ss	%xmm6, %xmm10, %xmm13
	vaddss	%xmm13, %xmm5, %xmm5
	vmovss	%xmm5, (%r9,%rsi,4)
	vmovss	8(%rdi), %xmm5
	vaddss	%xmm0, %xmm1, %xmm13
	vaddss	%xmm1, %xmm2, %xmm1
	vmulss	-76(%rbp), %xmm1, %xmm1
	vaddss	%xmm3, %xmm8, %xmm14
	vfmadd132ss	-80(%rbp), %xmm1, %xmm14
	vmovss	36(%rdi), %xmm7
	vmovss	40(%rdi), %xmm1
	vaddss	%xmm1, %xmm5, %xmm15
	vmulss	-68(%rbp), %xmm15, %xmm15
	vaddss	%xmm7, %xmm4, %xmm6
	vfmadd132ss	-72(%rbp), %xmm15, %xmm6
	vaddss	%xmm14, %xmm6, %xmm6
	vfmadd231ss	-84(%rbp), %xmm0, %xmm6
	vmovss	%xmm6, 4(%r9)
	vaddss	%xmm4, %xmm8, %xmm4
	vmulss	%xmm10, %xmm4, %xmm4
	vaddss	%xmm5, %xmm2, %xmm5
	vfmadd132ss	%xmm9, %xmm4, %xmm5
	vmulss	%xmm3, %xmm12, %xmm4
	vfmadd132ss	%xmm11, %xmm4, %xmm13
	vaddss	%xmm13, %xmm5, %xmm13
	vmovss	%xmm13, 4(%r9,%rsi,4)
	vmovss	16(%rdi), %xmm4
	vaddss	%xmm0, %xmm2, %xmm6
	addl	$6, %r15d
	vaddss	%xmm1, %xmm0, %xmm0
	vmulss	-76(%rbp), %xmm0, %xmm0
	vaddss	%xmm7, %xmm8, %xmm14
	vfmadd132ss	-80(%rbp), %xmm0, %xmm14
	vmovss	44(%rdi), %xmm13
	vmovss	48(%rdi), %xmm0
	vaddss	%xmm0, %xmm4, %xmm15
	vmulss	-68(%rbp), %xmm15, %xmm15
	vaddss	%xmm13, %xmm3, %xmm5
	vfmadd132ss	-72(%rbp), %xmm15, %xmm5
	vaddss	%xmm14, %xmm5, %xmm5
	vfmadd231ss	-84(%rbp), %xmm2, %xmm5
	vmovss	%xmm5, 8(%r9)
	vaddss	%xmm7, %xmm3, %xmm3
	vmulss	%xmm10, %xmm3, %xmm3
	vaddss	%xmm4, %xmm1, %xmm4
	vfmadd132ss	%xmm9, %xmm3, %xmm4
	vmulss	%xmm8, %xmm12, %xmm3
	vfmadd132ss	%xmm11, %xmm3, %xmm6
	vaddss	%xmm6, %xmm4, %xmm6
	vmovss	%xmm6, 8(%r9,%rsi,4)
	addq	$24, %rdi
	addq	$12, %r9
	addl	$3, %r14d
	vmovss	%xmm8, %xmm6, %xmm6
	vmovss	%xmm7, %xmm4, %xmm4
	vmovss	%xmm13, %xmm3, %xmm3
	cmpl	$27, %r14d
	jne	.L116
	vmovss	in_image+216(%rax), %xmm0
	vmovss	in_image+220(%rax), %xmm2
	vmovss	in_image+224(%rax), %xmm9
	vmovss	in_image+228(%rax), %xmm8
	movslq	%r15d, %r15
	movslq	%ecx, %rdi
	movq	%rdi, %r9
	salq	$6, %r9
	addq	%r9, %r15
	vmovss	in_image(,%r15,4), %xmm5
	vmovss	in_image+236(%rax), %xmm6
	vmovss	in_image+240(%rax), %xmm7
	salq	$8, %rdi
	vaddss	in_image+248(%rax), %xmm0, %xmm1
	vmulss	-68(%rbp), %xmm1, %xmm1
	vaddss	in_image+244(%rax), %xmm2, %xmm3
	vfmadd231ss	-72(%rbp), %xmm3, %xmm1
	vaddss	%xmm7, %xmm9, %xmm4
	vmulss	-76(%rbp), %xmm4, %xmm4
	vaddss	%xmm6, %xmm8, %xmm3
	vfmadd132ss	-80(%rbp), %xmm4, %xmm3
	vaddss	%xmm3, %xmm1, %xmm1
	vfmadd231ss	-84(%rbp), %xmm5, %xmm1
	vmovss	%xmm1, ou_image+108(%rdi)
	movl	%r10d, %edi
	subq	%rsi, %rdi
	vaddss	%xmm6, %xmm2, %xmm1
	vmulss	-64(%rbp), %xmm1, %xmm1
	vaddss	%xmm7, %xmm0, %xmm0
	vfmadd132ss	-52(%rbp), %xmm1, %xmm0
	vmulss	-60(%rbp), %xmm8, %xmm8
	vaddss	%xmm5, %xmm9, %xmm1
	vfmadd132ss	-56(%rbp), %xmm8, %xmm1
	vaddss	%xmm1, %xmm0, %xmm0
	vmovss	%xmm0, (%rdx,%rdi,4)
	jmp	.L115
.L139:
	movl	$ou_image+256, %ebx
	movl	$ou_image+4, %r9d
	movl	$ou_image+260, %ecx
	movl	$1, %edi
	.p2align 4,,10
	.p2align 3
.L118:
	movq	%r9, %rax
	movq	%rbx, %rdx
	.p2align 4,,10
	.p2align 3
.L119:
	vmovss	(%rdx), %xmm0
	vmovss	(%rax), %xmm1
	vmovss	%xmm1, (%rdx)
	vmovss	%xmm0, (%rax)
	addq	$4, %rdx
	addq	$256, %rax
	cmpq	%rax, %rcx
	jne	.L119
	incl	%edi
	addq	$256, %rbx
	addq	$4, %r9
	addq	$260, %rcx
	cmpl	$64, %edi
	jne	.L118
	movq	-96(%rbp), %rdx
	addq	$in_image, %rdx
	xorl	%eax, %eax
	xorl	%edi, %edi
	leal	24(%r11), %r12d
	movslq	%r12d, %r12
	subq	%rsi, %r12
	leal	25(%r11), %ebx
	movslq	%ebx, %rbx
	subq	%rsi, %rbx
	addl	$26, %r11d
	movslq	%r11d, %r11
	subq	%rsi, %r11
	jmp	.L124
	.p2align 4,,10
	.p2align 3
.L142:
	vbroadcastss	-84(%rbp), %ymm13
	vbroadcastss	-80(%rbp), %ymm11
	vbroadcastss	-76(%rbp), %ymm12
	vbroadcastss	-72(%rbp), %ymm14
	vbroadcastss	-68(%rbp), %ymm7
	vbroadcastss	-64(%rbp), %ymm6
	vmovups	ou_image(%rax), %ymm0
	vshufps	$136, ou_image+32(%rax), %ymm0, %ymm2
	vperm2f128	$3, %ymm2, %ymm2, %ymm1
	vshufps	$68, %ymm1, %ymm2, %ymm3
	vshufps	$238, %ymm1, %ymm2, %ymm1
	vinsertf128	$1, %xmm1, %ymm3, %ymm1
	vshufps	$221, ou_image+32(%rax), %ymm0, %ymm0
	vperm2f128	$3, %ymm0, %ymm0, %ymm2
	vshufps	$68, %ymm2, %ymm0, %ymm3
	vshufps	$238, %ymm2, %ymm0, %ymm2
	vinsertf128	$1, %xmm2, %ymm3, %ymm3
	vmovups	ou_image+8(%rax), %ymm0
	vmovups	ou_image+40(%rax), %ymm5
	vshufps	$136, %ymm5, %ymm0, %ymm4
	vperm2f128	$3, %ymm4, %ymm4, %ymm2
	vshufps	$68, %ymm2, %ymm4, %ymm8
	vshufps	$238, %ymm2, %ymm4, %ymm2
	vinsertf128	$1, %xmm2, %ymm8, %ymm2
	vshufps	$221, %ymm5, %ymm0, %ymm0
	vperm2f128	$3, %ymm0, %ymm0, %ymm4
	vshufps	$68, %ymm4, %ymm0, %ymm5
	vshufps	$238, %ymm4, %ymm0, %ymm4
	vinsertf128	$1, %xmm4, %ymm5, %ymm5
	vmovups	ou_image+16(%rax), %ymm0
	vmovups	ou_image+48(%rax), %ymm10
	vshufps	$136, %ymm10, %ymm0, %ymm9
	vperm2f128	$3, %ymm9, %ymm9, %ymm4
	vshufps	$68, %ymm4, %ymm9, %ymm8
	vshufps	$238, %ymm4, %ymm9, %ymm4
	vinsertf128	$1, %xmm4, %ymm8, %ymm8
	vshufps	$221, %ymm10, %ymm0, %ymm0
	vperm2f128	$3, %ymm0, %ymm0, %ymm4
	vshufps	$68, %ymm4, %ymm0, %ymm10
	vshufps	$238, %ymm4, %ymm0, %ymm4
	vinsertf128	$1, %xmm4, %ymm10, %ymm10
	vmovups	ou_image+24(%rax), %ymm4
	vshufps	$136, ou_image+56(%rax), %ymm4, %ymm15
	vperm2f128	$3, %ymm15, %ymm15, %ymm0
	vshufps	$68, %ymm0, %ymm15, %ymm9
	vshufps	$238, %ymm0, %ymm15, %ymm0
	vinsertf128	$1, %xmm0, %ymm9, %ymm9
	vshufps	$221, ou_image+56(%rax), %ymm4, %ymm4
	vperm2f128	$3, %ymm4, %ymm4, %ymm15
	vshufps	$68, %ymm15, %ymm4, %ymm0
	vshufps	$238, %ymm15, %ymm4, %ymm15
	vinsertf128	$1, %xmm15, %ymm0, %ymm0
	vaddps	%ymm3, %ymm0, %ymm0
	vmovaps	%ymm14, -240(%rbp)
	vmulps	%ymm14, %ymm0, %ymm0
	vmovaps	%ymm13, -144(%rbp)
	vfmadd231ps	%ymm13, %ymm8, %ymm0
	vaddps	%ymm9, %ymm2, %ymm4
	vmovaps	%ymm12, -208(%rbp)
	vmulps	%ymm12, %ymm4, %ymm12
	vaddps	%ymm10, %ymm5, %ymm4
	vmovaps	%ymm11, -176(%rbp)
	vfmadd132ps	%ymm11, %ymm12, %ymm4
	vaddps	%ymm4, %ymm0, %ymm0
	vmovups	ou_image+32(%rax), %ymm4
	vshufps	$136, ou_image+64(%rax), %ymm4, %ymm4
	vperm2f128	$3, %ymm4, %ymm4, %ymm12
	vshufps	$68, %ymm12, %ymm4, %ymm11
	vshufps	$238, %ymm12, %ymm4, %ymm12
	vinsertf128	$1, %xmm12, %ymm11, %ymm11
	vaddps	%ymm1, %ymm11, %ymm11
	vfmadd231ps	%ymm11, %ymm7, %ymm0
	vmovups	%ymm0, in_image(%rax)
	vaddps	%ymm10, %ymm3, %ymm3
	vmulps	%ymm6, %ymm3, %ymm3
	vaddps	%ymm9, %ymm1, %ymm1
	vbroadcastss	-52(%rbp), %ymm15
	vfmadd231ps	%ymm1, %ymm15, %ymm3
	vbroadcastss	-60(%rbp), %ymm10
	vmulps	%ymm5, %ymm10, %ymm5
	vaddps	%ymm8, %ymm2, %ymm2
	vbroadcastss	-56(%rbp), %ymm1
	vmovaps	%ymm1, -272(%rbp)
	vfmadd231ps	%ymm1, %ymm2, %ymm5
	vaddps	%ymm5, %ymm3, %ymm3
	vmovups	%ymm3, (%rdx)
	vmovups	ou_image+96(%rax), %ymm0
	vmovups	ou_image+64(%rax), %ymm3
	vshufps	$136, %ymm0, %ymm3, %ymm2
	vperm2f128	$3, %ymm2, %ymm2, %ymm1
	vshufps	$68, %ymm1, %ymm2, %ymm3
	vshufps	$238, %ymm1, %ymm2, %ymm1
	vinsertf128	$1, %xmm1, %ymm3, %ymm1
	vmovups	ou_image+64(%rax), %ymm3
	vshufps	$221, %ymm0, %ymm3, %ymm2
	vperm2f128	$3, %ymm2, %ymm2, %ymm3
	vshufps	$68, %ymm3, %ymm2, %ymm4
	vshufps	$238, %ymm3, %ymm2, %ymm3
	vinsertf128	$1, %xmm3, %ymm4, %ymm4
	vmovups	ou_image+72(%rax), %ymm2
	vmovups	ou_image+104(%rax), %ymm8
	vshufps	$136, %ymm8, %ymm2, %ymm5
	vperm2f128	$3, %ymm5, %ymm5, %ymm3
	vshufps	$68, %ymm3, %ymm5, %ymm9
	vshufps	$238, %ymm3, %ymm5, %ymm3
	vinsertf128	$1, %xmm3, %ymm9, %ymm3
	vshufps	$221, %ymm8, %ymm2, %ymm2
	vperm2f128	$3, %ymm2, %ymm2, %ymm5
	vshufps	$68, %ymm5, %ymm2, %ymm9
	vshufps	$238, %ymm5, %ymm2, %ymm5
	vinsertf128	$1, %xmm5, %ymm9, %ymm9
	vmovups	ou_image+80(%rax), %ymm2
	vmovups	ou_image+112(%rax), %ymm12
	vshufps	$136, %ymm12, %ymm2, %ymm8
	vperm2f128	$3, %ymm8, %ymm8, %ymm5
	vshufps	$68, %ymm5, %ymm8, %ymm11
	vshufps	$238, %ymm5, %ymm8, %ymm5
	vinsertf128	$1, %xmm5, %ymm11, %ymm11
	vshufps	$221, %ymm12, %ymm2, %ymm2
	vperm2f128	$3, %ymm2, %ymm2, %ymm5
	vshufps	$68, %ymm5, %ymm2, %ymm13
	vshufps	$238, %ymm5, %ymm2, %ymm5
	vinsertf128	$1, %xmm5, %ymm13, %ymm13
	vmovups	ou_image+88(%rax), %ymm14
	vshufps	$136, ou_image+120(%rax), %ymm14, %ymm5
	vperm2f128	$3, %ymm5, %ymm5, %ymm2
	vshufps	$68, %ymm2, %ymm5, %ymm12
	vshufps	$238, %ymm2, %ymm5, %ymm2
	vinsertf128	$1, %xmm2, %ymm12, %ymm12
	vmovups	ou_image+128(%rax), %ymm2
	vshufps	$136, %ymm2, %ymm0, %ymm0
	vperm2f128	$3, %ymm0, %ymm0, %ymm8
	vshufps	$68, %ymm8, %ymm0, %ymm5
	vshufps	$238, %ymm8, %ymm0, %ymm8
	vinsertf128	$1, %xmm8, %ymm5, %ymm5
	vaddps	%ymm1, %ymm5, %ymm5
	vmulps	%ymm7, %ymm5, %ymm5
	vshufps	$221, ou_image+120(%rax), %ymm14, %ymm8
	vperm2f128	$3, %ymm8, %ymm8, %ymm14
	vshufps	$68, %ymm14, %ymm8, %ymm0
	vshufps	$238, %ymm14, %ymm8, %ymm14
	vinsertf128	$1, %xmm14, %ymm0, %ymm0
	vaddps	%ymm4, %ymm0, %ymm0
	vfmadd231ps	-240(%rbp), %ymm0, %ymm5
	vaddps	%ymm12, %ymm3, %ymm8
	vmulps	-208(%rbp), %ymm8, %ymm8
	vaddps	%ymm13, %ymm9, %ymm0
	vfmadd132ps	-176(%rbp), %ymm8, %ymm0
	vaddps	%ymm0, %ymm5, %ymm0
	vfmadd231ps	-144(%rbp), %ymm11, %ymm0
	vmovups	%ymm0, in_image+32(%rax)
	vaddps	%ymm13, %ymm4, %ymm4
	vmulps	%ymm6, %ymm4, %ymm4
	vaddps	%ymm12, %ymm1, %ymm1
	vfmadd132ps	%ymm15, %ymm4, %ymm1
	vmulps	%ymm9, %ymm10, %ymm9
	vaddps	%ymm11, %ymm3, %ymm3
	vfmadd231ps	-272(%rbp), %ymm3, %ymm9
	vaddps	%ymm9, %ymm1, %ymm1
	vmovups	%ymm1, 32(%rdx)
	vmovups	ou_image+160(%rax), %ymm3
	vshufps	$136, %ymm3, %ymm2, %ymm1
	vperm2f128	$3, %ymm1, %ymm1, %ymm0
	vshufps	$68, %ymm0, %ymm1, %ymm12
	vshufps	$238, %ymm0, %ymm1, %ymm0
	vinsertf128	$1, %xmm0, %ymm12, %ymm12
	vshufps	$221, %ymm3, %ymm2, %ymm2
	vperm2f128	$3, %ymm2, %ymm2, %ymm0
	vshufps	$68, %ymm0, %ymm2, %ymm14
	vshufps	$238, %ymm0, %ymm2, %ymm0
	vinsertf128	$1, %xmm0, %ymm14, %ymm14
	vmovups	ou_image+136(%rax), %ymm0
	vmovups	ou_image+168(%rax), %ymm4
	vshufps	$136, %ymm4, %ymm0, %ymm2
	vperm2f128	$3, %ymm2, %ymm2, %ymm1
	vshufps	$68, %ymm1, %ymm2, %ymm8
	vshufps	$238, %ymm1, %ymm2, %ymm1
	vinsertf128	$1, %xmm1, %ymm8, %ymm8
	vshufps	$221, %ymm4, %ymm0, %ymm0
	vperm2f128	$3, %ymm0, %ymm0, %ymm1
	vshufps	$68, %ymm1, %ymm0, %ymm9
	vshufps	$238, %ymm1, %ymm0, %ymm1
	vinsertf128	$1, %xmm1, %ymm9, %ymm9
	vmovups	ou_image+144(%rax), %ymm0
	vmovups	ou_image+176(%rax), %ymm4
	vshufps	$136, %ymm4, %ymm0, %ymm2
	vperm2f128	$3, %ymm2, %ymm2, %ymm1
	vshufps	$68, %ymm1, %ymm2, %ymm5
	vshufps	$238, %ymm1, %ymm2, %ymm1
	vinsertf128	$1, %xmm1, %ymm5, %ymm5
	vshufps	$221, %ymm4, %ymm0, %ymm0
	vperm2f128	$3, %ymm0, %ymm0, %ymm1
	vshufps	$68, %ymm1, %ymm0, %ymm2
	vshufps	$238, %ymm1, %ymm0, %ymm1
	vinsertf128	$1, %xmm1, %ymm2, %ymm1
	vmovups	ou_image+152(%rax), %ymm4
	vmovups	ou_image+184(%rax), %ymm13
	vshufps	$136, %ymm13, %ymm4, %ymm2
	vperm2f128	$3, %ymm2, %ymm2, %ymm0
	vshufps	$68, %ymm0, %ymm2, %ymm11
	vshufps	$238, %ymm0, %ymm2, %ymm0
	vinsertf128	$1, %xmm0, %ymm11, %ymm0
	vshufps	$136, ou_image+192(%rax), %ymm3, %ymm2
	vperm2f128	$3, %ymm2, %ymm2, %ymm11
	vshufps	$68, %ymm11, %ymm2, %ymm3
	vshufps	$238, %ymm11, %ymm2, %ymm11
	vinsertf128	$1, %xmm11, %ymm3, %ymm3
	vaddps	%ymm12, %ymm3, %ymm3
	vmulps	%ymm7, %ymm3, %ymm7
	vshufps	$221, %ymm13, %ymm4, %ymm4
	vperm2f128	$3, %ymm4, %ymm4, %ymm3
	vshufps	$68, %ymm3, %ymm4, %ymm2
	vshufps	$238, %ymm3, %ymm4, %ymm3
	vinsertf128	$1, %xmm3, %ymm2, %ymm2
	vaddps	%ymm14, %ymm2, %ymm2
	vfmadd231ps	-240(%rbp), %ymm2, %ymm7
	vaddps	%ymm8, %ymm0, %ymm11
	vmulps	-208(%rbp), %ymm11, %ymm11
	vaddps	%ymm9, %ymm1, %ymm2
	vfmadd231ps	-176(%rbp), %ymm2, %ymm11
	vaddps	%ymm11, %ymm7, %ymm7
	vfmadd231ps	-144(%rbp), %ymm5, %ymm7
	vmovups	%ymm7, in_image+64(%rax)
	vaddps	%ymm14, %ymm1, %ymm1
	vmulps	%ymm6, %ymm1, %ymm6
	vaddps	%ymm12, %ymm0, %ymm0
	vfmadd231ps	%ymm0, %ymm15, %ymm6
	vmulps	%ymm9, %ymm10, %ymm10
	vaddps	%ymm8, %ymm5, %ymm5
	vfmadd231ps	-272(%rbp), %ymm5, %ymm10
	vaddps	%ymm10, %ymm6, %ymm6
	vmovups	%ymm6, 64(%rdx)
	vmovss	ou_image+196(%rax), %xmm9
	vmovss	ou_image+204(%rax), %xmm6
	vmovss	ou_image+212(%rax), %xmm4
	vmovss	ou_image+200(%rax), %xmm5
	vmovss	ou_image+208(%rax), %xmm1
	vmovss	ou_image+216(%rax), %xmm0
	vmovss	ou_image+192(%rax), %xmm7
	vmovss	ou_image+220(%rax), %xmm3
	vmovss	ou_image+224(%rax), %xmm2
	vaddss	%xmm0, %xmm5, %xmm8
	vmovss	-76(%rbp), %xmm13
	vmulss	%xmm13, %xmm8, %xmm8
	vaddss	%xmm4, %xmm6, %xmm10
	vmovss	-80(%rbp), %xmm15
	vfmadd132ss	%xmm15, %xmm8, %xmm10
	vaddss	%xmm7, %xmm2, %xmm8
	vmovss	-68(%rbp), %xmm14
	vmulss	%xmm14, %xmm8, %xmm8
	vmovss	-84(%rbp), %xmm12
	vfmadd231ss	%xmm12, %xmm1, %xmm8
	vaddss	%xmm8, %xmm10, %xmm8
	vaddss	%xmm9, %xmm3, %xmm10
	vmovss	-72(%rbp), %xmm11
	vfmadd231ss	%xmm11, %xmm10, %xmm8
	vmovss	%xmm8, in_image+96(%rax)
	vaddss	%xmm4, %xmm9, %xmm9
	vmulss	-64(%rbp), %xmm9, %xmm9
	vaddss	%xmm0, %xmm7, %xmm7
	vfmadd132ss	-52(%rbp), %xmm9, %xmm7
	vmulss	-60(%rbp), %xmm6, %xmm9
	vaddss	%xmm1, %xmm5, %xmm8
	vfmadd132ss	-56(%rbp), %xmm9, %xmm8
	vaddss	%xmm8, %xmm7, %xmm8
	vmovss	%xmm8, (%rdx,%r12,4)
	vmovss	ou_image+228(%rax), %xmm7
	vmovss	ou_image+232(%rax), %xmm9
	vaddss	%xmm1, %xmm2, %xmm8
	vmulss	%xmm13, %xmm8, %xmm8
	vaddss	%xmm4, %xmm3, %xmm10
	vfmadd132ss	%xmm15, %xmm8, %xmm10
	vaddss	%xmm9, %xmm5, %xmm8
	vmulss	%xmm14, %xmm8, %xmm8
	vfmadd231ss	%xmm12, %xmm0, %xmm8
	vaddss	%xmm8, %xmm10, %xmm8
	vaddss	%xmm7, %xmm6, %xmm10
	vfmadd231ss	%xmm11, %xmm10, %xmm8
	vmovss	%xmm8, in_image+100(%rax)
	vaddss	%xmm6, %xmm3, %xmm6
	vmovss	-64(%rbp), %xmm10
	vmulss	%xmm10, %xmm6, %xmm6
	vaddss	%xmm5, %xmm2, %xmm5
	vfmadd132ss	-52(%rbp), %xmm6, %xmm5
	vmulss	-60(%rbp), %xmm4, %xmm8
	vaddss	%xmm0, %xmm1, %xmm6
	vfmadd132ss	-56(%rbp), %xmm8, %xmm6
	vaddss	%xmm6, %xmm5, %xmm6
	vmovss	%xmm6, (%rdx,%rbx,4)
	vaddss	%xmm9, %xmm0, %xmm5
	vmulss	%xmm13, %xmm5, %xmm5
	vaddss	%xmm7, %xmm3, %xmm6
	vfmadd132ss	%xmm15, %xmm5, %xmm6
	vaddss	ou_image+236(%rax), %xmm4, %xmm5
	vmulss	%xmm11, %xmm5, %xmm5
	vfmadd231ss	%xmm12, %xmm2, %xmm5
	vaddss	%xmm5, %xmm6, %xmm5
	vaddss	ou_image+240(%rax), %xmm1, %xmm6
	vfmadd231ss	%xmm14, %xmm6, %xmm5
	vmovss	%xmm5, in_image+104(%rax)
	vaddss	%xmm7, %xmm4, %xmm4
	vmulss	%xmm10, %xmm4, %xmm4
	vaddss	%xmm1, %xmm9, %xmm1
	vfmadd132ss	-52(%rbp), %xmm4, %xmm1
	vmulss	-60(%rbp), %xmm3, %xmm5
	vaddss	%xmm0, %xmm2, %xmm4
	vfmadd132ss	-56(%rbp), %xmm5, %xmm4
	vaddss	%xmm4, %xmm1, %xmm1
	vmovss	%xmm1, (%rdx,%r11,4)
	vmovss	ou_image+236(%rax), %xmm8
	vmovss	ou_image+240(%rax), %xmm6
	vaddss	ou_image+248(%rax), %xmm0, %xmm1
	vmulss	%xmm14, %xmm1, %xmm1
	vaddss	ou_image+244(%rax), %xmm3, %xmm4
	vfmadd231ss	%xmm11, %xmm4, %xmm1
	vaddss	%xmm6, %xmm2, %xmm5
	vmulss	%xmm13, %xmm5, %xmm5
	vaddss	%xmm8, %xmm7, %xmm4
	vfmadd132ss	%xmm15, %xmm5, %xmm4
	vaddss	%xmm4, %xmm1, %xmm4
	vfmadd231ss	%xmm12, %xmm9, %xmm4
	vmovss	%xmm4, in_image+108(%rax)
	movslq	%r10d, %rcx
	subq	%rsi, %rcx
	vaddss	%xmm8, %xmm3, %xmm3
	vmulss	%xmm10, %xmm3, %xmm3
	vaddss	%xmm6, %xmm0, %xmm0
	vfmadd132ss	-52(%rbp), %xmm3, %xmm0
	vmulss	-60(%rbp), %xmm7, %xmm7
	vaddss	%xmm9, %xmm2, %xmm2
	vfmadd132ss	-56(%rbp), %xmm7, %xmm2
	vaddss	%xmm2, %xmm0, %xmm0
	vmovss	%xmm0, (%rdx,%rcx,4)
.L122:
	incl	%edi
	addq	$256, %rdx
	addq	$256, %rax
	cmpl	$64, %edi
	je	.L141
.L124:
	cmpl	$14, %r8d
	ja	.L142
	vmovss	ou_image+4(%rax), %xmm6
	vmovss	ou_image+12(%rax), %xmm4
	vmovss	ou_image+20(%rax), %xmm3
	vmovss	ou_image+8(%rax), %xmm2
	vmovss	ou_image+16(%rax), %xmm1
	vmovss	ou_image+24(%rax), %xmm0
	leaq	ou_image(%rax), %rcx
	leaq	in_image(%rax), %r9
	xorl	%r13d, %r13d
	movl	$4, %r14d
	vmovss	-52(%rbp), %xmm9
	vmovss	-64(%rbp), %xmm10
	vmovss	-56(%rbp), %xmm11
	vmovss	-60(%rbp), %xmm12
.L123:
	vmovss	(%rcx), %xmm5
	vaddss	%xmm1, %xmm2, %xmm13
	vaddss	%xmm0, %xmm2, %xmm2
	vmulss	-76(%rbp), %xmm2, %xmm2
	vaddss	%xmm4, %xmm3, %xmm14
	vfmadd132ss	-80(%rbp), %xmm2, %xmm14
	vmovss	28(%rcx), %xmm8
	vmovss	32(%rcx), %xmm2
	vaddss	%xmm5, %xmm2, %xmm15
	vmulss	-68(%rbp), %xmm15, %xmm15
	vaddss	%xmm8, %xmm6, %xmm7
	vfmadd132ss	-72(%rbp), %xmm15, %xmm7
	vaddss	%xmm14, %xmm7, %xmm7
	vfmadd231ss	-84(%rbp), %xmm1, %xmm7
	vmovss	%xmm7, (%r9)
	vmulss	%xmm4, %xmm12, %xmm7
	vaddss	%xmm5, %xmm0, %xmm5
	vfmadd132ss	%xmm9, %xmm7, %xmm5
	vmulss	%xmm13, %xmm11, %xmm13
	vaddss	%xmm6, %xmm3, %xmm6
	vfmadd231ss	%xmm6, %xmm10, %xmm13
	vaddss	%xmm13, %xmm5, %xmm5
	vmovss	%xmm5, (%r9,%rsi,4)
	vmovss	8(%rcx), %xmm5
	vaddss	%xmm1, %xmm0, %xmm13
	vaddss	%xmm2, %xmm1, %xmm1
	vmulss	-76(%rbp), %xmm1, %xmm1
	vaddss	%xmm8, %xmm3, %xmm14
	vfmadd132ss	-80(%rbp), %xmm1, %xmm14
	vmovss	36(%rcx), %xmm7
	vmovss	40(%rcx), %xmm1
	vaddss	%xmm1, %xmm5, %xmm15
	vmulss	-68(%rbp), %xmm15, %xmm15
	vaddss	%xmm7, %xmm4, %xmm6
	vfmadd132ss	-72(%rbp), %xmm15, %xmm6
	vaddss	%xmm14, %xmm6, %xmm6
	vfmadd231ss	-84(%rbp), %xmm0, %xmm6
	vmovss	%xmm6, 4(%r9)
	vaddss	%xmm8, %xmm4, %xmm4
	vmulss	%xmm10, %xmm4, %xmm4
	vaddss	%xmm2, %xmm5, %xmm5
	vfmadd132ss	%xmm9, %xmm4, %xmm5
	vmulss	%xmm3, %xmm12, %xmm4
	vfmadd132ss	%xmm11, %xmm4, %xmm13
	vaddss	%xmm13, %xmm5, %xmm13
	vmovss	%xmm13, 4(%r9,%rsi,4)
	vmovss	16(%rcx), %xmm4
	vaddss	%xmm2, %xmm0, %xmm6
	addl	$6, %r14d
	vaddss	%xmm1, %xmm0, %xmm0
	vmulss	-76(%rbp), %xmm0, %xmm0
	vaddss	%xmm7, %xmm8, %xmm14
	vfmadd132ss	-80(%rbp), %xmm0, %xmm14
	vmovss	44(%rcx), %xmm13
	vmovss	48(%rcx), %xmm0
	vaddss	%xmm0, %xmm4, %xmm15
	vmulss	-68(%rbp), %xmm15, %xmm15
	vaddss	%xmm13, %xmm3, %xmm5
	vfmadd132ss	-72(%rbp), %xmm15, %xmm5
	vaddss	%xmm14, %xmm5, %xmm5
	vfmadd231ss	-84(%rbp), %xmm2, %xmm5
	vmovss	%xmm5, 8(%r9)
	vaddss	%xmm7, %xmm3, %xmm3
	vmulss	%xmm10, %xmm3, %xmm3
	vaddss	%xmm4, %xmm1, %xmm4
	vfmadd132ss	%xmm9, %xmm3, %xmm4
	vmulss	%xmm8, %xmm12, %xmm3
	vfmadd132ss	%xmm11, %xmm3, %xmm6
	vaddss	%xmm6, %xmm4, %xmm6
	vmovss	%xmm6, 8(%r9,%rsi,4)
	addq	$24, %rcx
	addq	$12, %r9
	addl	$3, %r13d
	vmovss	%xmm8, %xmm6, %xmm6
	vmovss	%xmm7, %xmm4, %xmm4
	vmovss	%xmm13, %xmm3, %xmm3
	cmpl	$27, %r13d
	jne	.L123
	vmovss	ou_image+216(%rax), %xmm5
	vmovss	ou_image+220(%rax), %xmm6
	vmovss	ou_image+224(%rax), %xmm9
	vmovss	ou_image+228(%rax), %xmm8
	movslq	%r14d, %r14
	movslq	%edi, %rcx
	movq	%rcx, %r9
	salq	$6, %r9
	addq	%r9, %r14
	vmovss	ou_image(,%r14,4), %xmm1
	vmovss	ou_image+236(%rax), %xmm2
	vmovss	ou_image+240(%rax), %xmm7
	salq	$8, %rcx
	vaddss	ou_image+248(%rax), %xmm5, %xmm0
	vmulss	-68(%rbp), %xmm0, %xmm0
	vaddss	ou_image+244(%rax), %xmm6, %xmm3
	vfmadd231ss	-72(%rbp), %xmm3, %xmm0
	vaddss	%xmm9, %xmm7, %xmm4
	vmulss	-76(%rbp), %xmm4, %xmm4
	vaddss	%xmm8, %xmm2, %xmm3
	vfmadd132ss	-80(%rbp), %xmm4, %xmm3
	vaddss	%xmm3, %xmm0, %xmm0
	vfmadd231ss	-84(%rbp), %xmm1, %xmm0
	vmovss	%xmm0, in_image+108(%rcx)
	movl	%r10d, %ecx
	subq	%rsi, %rcx
	vaddss	%xmm6, %xmm2, %xmm2
	vmulss	-64(%rbp), %xmm2, %xmm2
	vaddss	%xmm5, %xmm7, %xmm0
	vfmadd132ss	-52(%rbp), %xmm2, %xmm0
	vmulss	-60(%rbp), %xmm8, %xmm8
	vaddss	%xmm9, %xmm1, %xmm1
	vfmadd132ss	-56(%rbp), %xmm8, %xmm1
	vaddss	%xmm1, %xmm0, %xmm0
	vmovss	%xmm0, (%rdx,%rcx,4)
	jmp	.L122
.L141:
	movl	$60, jj(%rip)
	rdtsc
	salq	$32, %rdx
	orq	%rdx, %rax
	movq	%rax, t2_rdtsc(%rip)
#APP
# 76 "IMP1.c" 1
	#mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm2
# 0 "" 2
#NO_APP
	movq	t2_rdtsc(%rip), %rax
	subq	t1_rdtsc(%rip), %rax
	movq	%rax, ttotal_rdtsc(%rip)
	movq	ttbest_rdtsc(%rip), %rsi
	movq	elapsed_rdtsc(%rip), %rdx
	cmpq	%rsi, %rax
	jge	.L126
	movq	%rax, ttbest_rdtsc(%rip)
	movq	elapsed_rdtsc(%rip), %rdx
	movq	%rdx, %rcx
	negq	%rcx
	movq	%rcx, elapsed(%rip)
	movq	%rax, %rsi
.L126:
	addq	ttime(%rip), %rax
	movq	%rax, ttime(%rip)
	leaq	-1(%rdx), %rcx
	movq	%rcx, elapsed_rdtsc(%rip)
	testq	%rdx, %rdx
	je	.L127
	cmpq	overal_time(%rip), %rax
	jl	.L128
.L127:
	movl	$1, %ecx
	subq	%rdx, %rcx
	movq	elapsed(%rip), %rdx
	movl	$.LC33, %edi
	xorl	%eax, %eax
	vzeroupper
	call	printf
	movl	$.LC25, %esi
	movl	$.LC34, %edi
	call	fopen
	movq	%rax, fileForSpeedups(%rip)
	movq	ttbest_rdtsc(%rip), %r9
	movl	$64, %r8d
	movl	$64, %ecx
	movq	programName(%rip), %rdx
	movl	$.LC35, %esi
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	fprintf
	vcvtss2sd	in_image+8320(%rip), %xmm0, %xmm0
	movl	$.LC36, %edi
	movb	$1, %al
	call	printf
	movl	$in_image, %edi
	call	savefloatMatrixFileForOutPuts
	xorl	%eax, %eax
	addq	$224, %rsp
	popq	%rbx
	popq	%r10
	.cfi_def_cfa 10, 0
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	leaq	-8(%r10), %rsp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE5485:
	.size	main, .-main
	.globl	high
	.data
	.align 16
	.type	high, @object
	.size	high, 16
high:
	.long	3205979542
	.long	3177951939
	.long	1035660465
	.long	1066318636
	.globl	low
	.align 16
	.type	low, @object
	.size	low, 20
low:
	.long	1058691821
	.long	1049141866
	.long	3181392773
	.long	3163170463
	.long	1020993590
	.comm	ou_image,16384,32
	.comm	in_image,16384,32
	.comm	half_col,4,4
	.comm	half_row,4,4
	.comm	jj,4,4
	.comm	j,4,4
	.comm	i,4,4
	.globl	fileForOutPuts
	.bss
	.align 8
	.type	fileForOutPuts, @object
	.size	fileForOutPuts, 8
fileForOutPuts:
	.zero	8
	.comm	temp2i16,32,32
	.comm	mask,128,32
	.globl	ttime
	.align 8
	.type	ttime, @object
	.size	ttime, 8
ttime:
	.zero	8
	.globl	overal_time
	.data
	.align 8
	.type	overal_time, @object
	.size	overal_time, 8
overal_time:
	.quad	9999999999
	.globl	elapsed_rdtsc
	.bss
	.align 8
	.type	elapsed_rdtsc, @object
	.size	elapsed_rdtsc, 8
elapsed_rdtsc:
	.zero	8
	.comm	elapsed,8,8
	.globl	ttbest_rdtsc
	.data
	.align 8
	.type	ttbest_rdtsc, @object
	.size	ttbest_rdtsc, 8
ttbest_rdtsc:
	.quad	99999999999999999
	.comm	ttotal_rdtsc,8,8
	.comm	t2_rdtsc,8,8
	.comm	t1_rdtsc,8,8
	.comm	mask1,128,32
	.globl	programName
	.section	.rodata.str1.1
.LC37:
	.string	" "
	.data
	.align 8
	.type	programName, @object
	.size	programName, 8
programName:
	.quad	.LC37
	.globl	fileForSpeedups
	.bss
	.align 8
	.type	fileForSpeedups, @object
	.size	fileForSpeedups, 8
fileForSpeedups:
	.zero	8
	.section	.rodata.cst8,"aM",@progbits,8
	.align 8
.LC0:
	.long	2296604913
	.long	1055193269
	.align 8
.LC1:
	.long	2296604913
	.long	1056241845
	.align 8
.LC2:
	.long	2439541424
	.long	1069513965
	.section	.rodata.cst32,"aM",@progbits,32
	.align 32
.LC3:
	.long	0
	.long	1
	.long	2
	.long	3
	.long	4
	.long	5
	.long	6
	.long	7
	.align 32
.LC4:
	.long	274877907
	.long	274877907
	.long	274877907
	.long	274877907
	.long	274877907
	.long	274877907
	.long	274877907
	.long	274877907
	.align 32
.LC5:
	.byte	4
	.byte	5
	.byte	6
	.byte	7
	.byte	-128
	.byte	-128
	.byte	-128
	.byte	-128
	.byte	12
	.byte	13
	.byte	14
	.byte	15
	.byte	-128
	.byte	-128
	.byte	-128
	.byte	-128
	.byte	4
	.byte	5
	.byte	6
	.byte	7
	.byte	-128
	.byte	-128
	.byte	-128
	.byte	-128
	.byte	12
	.byte	13
	.byte	14
	.byte	15
	.byte	-128
	.byte	-128
	.byte	-128
	.byte	-128
	.align 32
.LC6:
	.byte	-128
	.byte	-128
	.byte	-128
	.byte	-128
	.byte	4
	.byte	5
	.byte	6
	.byte	7
	.byte	-128
	.byte	-128
	.byte	-128
	.byte	-128
	.byte	12
	.byte	13
	.byte	14
	.byte	15
	.byte	-128
	.byte	-128
	.byte	-128
	.byte	-128
	.byte	4
	.byte	5
	.byte	6
	.byte	7
	.byte	-128
	.byte	-128
	.byte	-128
	.byte	-128
	.byte	12
	.byte	13
	.byte	14
	.byte	15
	.align 32
.LC7:
	.long	8
	.long	9
	.long	10
	.long	11
	.long	12
	.long	13
	.long	14
	.long	15
	.align 32
.LC8:
	.long	16
	.long	17
	.long	18
	.long	19
	.long	20
	.long	21
	.long	22
	.long	23
	.align 32
.LC9:
	.long	24
	.long	25
	.long	26
	.long	27
	.long	28
	.long	29
	.long	30
	.long	31
	.align 32
.LC10:
	.long	32
	.long	33
	.long	34
	.long	35
	.long	36
	.long	37
	.long	38
	.long	39
	.align 32
.LC11:
	.long	40
	.long	41
	.long	42
	.long	43
	.long	44
	.long	45
	.long	46
	.long	47
	.align 32
.LC12:
	.long	48
	.long	49
	.long	50
	.long	51
	.long	52
	.long	53
	.long	54
	.long	55
	.align 32
.LC13:
	.long	56
	.long	57
	.long	58
	.long	59
	.long	60
	.long	61
	.long	62
	.long	63
	.align 32
.LC14:
	.long	10
	.long	11
	.long	12
	.long	13
	.long	14
	.long	15
	.long	16
	.long	17
	.align 32
.LC15:
	.long	18
	.long	19
	.long	20
	.long	21
	.long	22
	.long	23
	.long	24
	.long	25
	.align 32
.LC16:
	.long	65535
	.long	65535
	.long	65535
	.long	65535
	.long	65535
	.long	65535
	.long	65535
	.long	65535
	.align 32
.LC17:
	.long	26
	.long	27
	.long	28
	.long	29
	.long	30
	.long	31
	.long	32
	.long	33
	.align 32
.LC18:
	.long	34
	.long	35
	.long	36
	.long	37
	.long	38
	.long	39
	.long	40
	.long	41
	.align 32
.LC19:
	.long	42
	.long	43
	.long	44
	.long	45
	.long	46
	.long	47
	.long	48
	.long	49
	.align 32
.LC20:
	.long	50
	.long	51
	.long	52
	.long	53
	.long	54
	.long	55
	.long	56
	.long	57
	.align 32
.LC21:
	.long	58
	.long	59
	.long	60
	.long	61
	.long	62
	.long	63
	.long	64
	.long	65
	.align 32
.LC22:
	.long	66
	.long	67
	.long	68
	.long	69
	.long	70
	.long	71
	.long	72
	.long	73
	.align 32
.LC23:
	.long	1234
	.long	1235
	.long	1236
	.long	1237
	.long	1238
	.long	1239
	.long	1240
	.long	1241
	.align 32
.LC24:
	.long	8
	.long	8
	.long	8
	.long	8
	.long	8
	.long	8
	.long	8
	.long	8
	.ident	"GCC: (GNU) 8.1.1 20180502 (Red Hat 8.1.1-1)"
	.section	.note.GNU-stack,"",@progbits
